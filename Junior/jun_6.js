--------------------------------------------------------------------------------------------
⋙ ❍ Разница в уровне охвата (Scope)?
---
Junior-разработчик должен разобраться в области видимости (Scope) переменных в JavaScript и понять, как работают `var`, `let` и `const`.  
1. Ознакомьтесь с разницей между глобальной, функциональной и блочной областью видимости.  
2. Определите, что выведет код ниже, и объясните результат:  
```javascript
function testScope() {
    if (true) {
        var a = "var scope";
        let b = "let scope";
        const c = "const scope";
    }
    console.log(a); // ?
    console.log(b); // ?
    console.log(c); // ?
}

testScope();
```
3. Перепишите код так, чтобы переменная `a` не была доступна за пределами блока `if`, используя `let` или `const`.  
4. Объясните, почему `var` не рекомендуется использовать в современных проектах.  

Ожидаемый результат: 
- Разработчик должен понять, какие переменные доступны за пределами блока, а какие нет.  
- Осознать, почему `var` имеет функциональную область видимости, а `let` и `const` — блочную.  
- Уметь писать код с правильным использованием `let` и `const`. 
--------------------------------------------------------------------------------------------  
