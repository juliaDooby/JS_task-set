---------------------------------------------------------------------------------------------    
8. Напишите функцию, которая принимает две строки и возвращает true, если одна строка является анаграммой другой (имеют одинаковые символы, но в разном порядке) –
function isAnagram(str1, str2) {
    const sortedStr1 = str1.split('').sort().join('');
    const sortedStr2 = str2.split('').sort().join('');
    return sortedStr1 === sortedStr2;
}
Ваш код для проверки, являются ли две строки анаграммами, написан правильно и эффективно. В нем используется метод сортировки строк, который упорядочивает символы, чтобы затем сравнить их. Если строки являются анаграммами, их отсортированные версии будут одинаковыми.
Вот ваш код:
```javascript
function isAnagram(str1, str2) {
    const sortedStr1 = str1.split('').sort().join('');
    const sortedStr2 = str2.split('').sort().join('');
    return sortedStr1 === sortedStr2;
}
```
Объяснение:
1. `str1.split('')` — разделяет строку на массив символов.
2. `.sort()` — сортирует массив символов в алфавитном порядке.
3. `.join('')` — соединяет отсортированные символы обратно в строку.
4. Затем сравниваются отсортированные строки `sortedStr1` и `sortedStr2`. Если они одинаковы, значит, строки являются анаграммами.
Пример использования:
```javascript
console.log(isAnagram('listen', 'silent'));  // true
console.log(isAnagram('hello', 'world'));    // false
console.log(isAnagram('evil', 'vile'));      // true
```
Результат:
- Для строк `'listen'` и `'silent'` функция вернет `true`, так как они являются анаграммами.
- Для строк `'hello'` и `'world'` функция вернет `false`, так как они не имеют одинаковых символов.
Возможные улучшения:
Этот метод хорошо работает для строк, состоящих только из букв, но можно улучшить его, чтобы он игнорировал пробелы, заглавные буквы и другие символы (например, для более универсальной проверки). Вот улучшенная версия:
```javascript
function isAnagram(str1, str2) {
    const normalize = (str) => str.toLowerCase().replace(/[^a-zа-я]/g, '').split('').sort().join('');
    return normalize(str1) === normalize(str2);
}
```
Объяснение:
1. `toLowerCase()` — приводит обе строки к нижнему регистру, чтобы избежать проблем с различием в регистре.
2. `.replace(/[^a-zа-я]/g, '')` — удаляет все символы, которые не являются буквами (например, пробелы, знаки препинания и цифры).
3. После этого строки приводятся к нормализованному виду, сортируются и сравниваются.
Пример использования улучшенной версии:
```javascript
console.log(isAnagram('Astronomer', 'Moon starer'));  // true
console.log(isAnagram('The eyes', 'They see'));       // true
```
Это решение будет работать с пробелами и различным регистром символов.
---------------------------------------------------------------------------------------------
