---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
–ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ (–∏–ª–∏ –∑–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏) ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–∞–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (—Å—É–≤–µ–Ω–∏—Ä–æ–≤, —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ç.–¥.) —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –∏—Ö –æ–±—â–∏–π –≤–µ—Å –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è. –≠—Ç–æ—Ç —Ç–∏–ø –∑–∞–¥–∞—á–∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∞–ª–≥–æ—Ä–∏—Ç–º–∞—Ö –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–∞–∏–ª—É—á—à–µ–≥–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±—ä–µ–º –∏–ª–∏ –≤–µ—Å —Ä—é–∫–∑–∞–∫–∞).
1Ô∏è‚É£ –ë–∞–∑–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ (0/1)
‚åõ –ó–∞–¥–∞—á–∞: –î–∞–Ω—ã –ø—Ä–µ–¥–º–µ—Ç—ã —Å –≤–µ—Å–∞–º–∏ –∏ —Ü–µ–Ω–∞–º–∏. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –≤ —Ä—é–∫–∑–∞–∫ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ –≤–µ—Å—É.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function knapsack(items, capacity) {
  const n = items.length;
  const dp = Array(n + 1).fill().map(() => Array(capacity + 1).fill(0));

  for (let i = 1; i <= n; i++) {
    for (let w = 1; w <= capacity; w++) {
      if (items[i - 1].weight <= w) {
        dp[i][w] = Math.max(dp[i - 1][w], dp[i - 1][w - items[i - 1].weight] + items[i - 1].value);
      } else {
        dp[i][w] = dp[i - 1][w];
      }
    }
  }
  return dp[n][capacity];
}

const items = [
  { value: 60, weight: 10 },
  { value: 100, weight: 20 },
  { value: 120, weight: 30 }
];

console.log(knapsack(items, 50)); // 220
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –†–µ—à–µ–Ω–∏–µ –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏. –ú—ã —Å—Ç—Ä–æ–∏–º —Ç–∞–±–ª–∏—Ü—É `dp`, –≥–¥–µ —è—á–µ–π–∫–∞ `dp[i][w]` —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –ø–µ—Ä–≤—ã—Ö `i` –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø—Ä–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–∏ –ø–æ –≤–µ—Å—É `w`. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –º—ã —Ä–µ—à–∞–µ–º, –≤–∫–ª—é—á–∞—Ç—å –ª–∏ –µ–≥–æ –≤ —Ä—é–∫–∑–∞–∫.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
2Ô∏è‚É£ –ó–∞–¥–∞—á–∞ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ —Ä—é–∫–∑–∞–∫–æ–º
‚åõ–ó–∞–¥–∞—á–∞: –£ –≤–∞—Å –µ—Å—Ç—å 100 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ —Ä—é–∫–∑–∞–∫ —Å –≤–µ—Å–æ–º 100. –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏, —É—á–∏—Ç—ã–≤–∞—è –±–æ–ª—å—à—É—é –¥–ª–∏–Ω—É –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function knapsackLarge(items, capacity) {
  const dp = Array(capacity + 1).fill(0);

  items.forEach(item => {
    for (let w = capacity; w >= item.weight; w--) {
      dp[w] = Math.max(dp[w], dp[w - item.weight] + item.value);
    }
  });

  return dp[capacity];
}

const items = Array(100).fill().map((_, i) => ({ value: (i + 1) * 10, weight: i + 1 }));
console.log(knapsackLarge(items, 100)); // 5050
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ `dp`, –≥–¥–µ –∫–∞–∂–¥–∞—è —è—á–µ–π–∫–∞ —Ö—Ä–∞–Ω–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤–µ—Å–∞ —Ä—é–∫–∑–∞–∫–∞. –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–µ—Å–∞ –∏ –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–º–µ—Ç–∞–º.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
3Ô∏è‚É£ –ó–∞–¥–∞—á–∞ —Å —Ä—é–∫–∑–∞–∫–æ–º –∏ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ (—Ä–∞–∑—Ä–µ—à–µ–Ω—ã –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω—ã–µ –≤–∫–ª—é—á–µ–Ω–∏—è)
‚åõ–ó–∞–¥–∞—á–∞: –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∏, —Ç–µ–ø–µ—Ä—å –ø—Ä–µ–¥–º–µ—Ç—ã –º–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –≤ —Ä—é–∫–∑–∞–∫. –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∑–∞–¥–∞—á–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function unboundedKnapsack(items, capacity) {
  const dp = Array(capacity + 1).fill(0);

  items.forEach(item => {
    for (let w = item.weight; w <= capacity; w++) {
      dp[w] = Math.max(dp[w], dp[w - item.weight] + item.value);
    }
  });

  return dp[capacity];
}

const items = [
  { value: 60, weight: 10 },
  { value: 100, weight: 20 },
  { value: 120, weight: 30 }
];

console.log(unboundedKnapsack(items, 50)); // 300
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–µ—Å–∞ –º—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ —Ä—é–∫–∑–∞–∫.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
4Ô∏è‚É£ –ó–∞–¥–∞—á–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
‚åõ–ó–∞–¥–∞—á–∞: –ö–∞–∂–¥—ã–π –ø—Ä–µ–¥–º–µ—Ç –º–æ–∂–Ω–æ –ø–æ–ª–æ–∂–∏—Ç—å –≤ —Ä—é–∫–∑–∞–∫ –Ω–µ –±–æ–ª–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Ä–∞–∑. –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∑–∞–¥–∞—á–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function boundedKnapsack(items, capacity) {
  const dp = Array(capacity + 1).fill(0);

  items.forEach(item => {
    for (let i = 0; i < item.quantity; i++) {
      for (let w = capacity; w >= item.weight; w--) {
        dp[w] = Math.max(dp[w], dp[w - item.weight] + item.value);
      }
    }
  });

  return dp[capacity];
}

const items = [
  { value: 60, weight: 10, quantity: 2 },
  { value: 100, weight: 20, quantity: 1 },
  { value: 120, weight: 30, quantity: 3 }
];

console.log(boundedKnapsack(items, 50)); // 240
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –º—ã –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ —É—á–∏—Ç—ã–≤–∞–µ–º –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º —É—á–∏—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
5Ô∏è‚É£ –í–∑–∞–∏–º–æ—Å–≤—è–∑—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–µ–π
‚åõ–ó–∞–¥–∞—á–∞: –£ –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã, –Ω–æ –∫–∞–∂–¥—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–º–µ–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤–∑—è—Ç—å –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç, –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –¥—Ä—É–≥–æ–π. –ö–∞–∫ —Ä–µ—à–∏—Ç—å —Ç–∞–∫—É—é –∑–∞–¥–∞—á—É?
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function dependencyKnapsack(items, capacity, dependencies) {
  const dp = Array(capacity + 1).fill(0);

  items.forEach(item => {
    const depItem = dependencies[item.name];
    if (depItem) {
      for (let w = capacity; w >= item.weight + depItem.weight; w--) {
        dp[w] = Math.max(dp[w], dp[w - item.weight - depItem.weight] + item.value + depItem.value);
      }
    } else {
      for (let w = capacity; w >= item.weight; w--) {
        dp[w] = Math.max(dp[w], dp[w - item.weight] + item.value);
      }
    }
  });

  return dp[capacity];
}

const items = [
  { name: "A", value: 60, weight: 10 },
  { name: "B", value: 100, weight: 20 },
  { name: "C", value: 120, weight: 30 }
];

const dependencies = {
  "A": { value: 20, weight: 5 },
  "B": { value: 50, weight: 15 }
};

console.log(dependencyKnapsack(items, 50, dependencies)); // 230
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –µ—Å—Ç—å –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å. –ï—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –æ–±–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ —Å—á–∏—Ç–∞—é—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
6Ô∏è‚É£ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –æ —Ä—é–∫–∑–∞–∫–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–∞–¥–∞—á –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏
‚åõ–ó–∞–¥–∞—á–∞: –£ –Ω–∞—Å –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á, –∏ –∫–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –∏–º–µ–µ—Ç —Å–≤–æ—é —Å—Ç–æ–∏–º–æ—Å—Ç—å. –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—è –≤—Ä–µ–º–µ–Ω–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function scheduleTasks(tasks, timeLimit) {
  const dp = Array(timeLimit + 1).fill(0);

  tasks.forEach(task => {
    for (let t = timeLimit; t >= task.time; t--) {
      dp[t] = Math.max(dp[t], dp[t - task.time] + task.value);
    }
  });

  return dp[timeLimit];
}

const tasks = [
  { value: 50, time: 2 },
  { value: 70, time: 3 },
  { value: 60, time: 1 },
];

console.log(scheduleTasks(tasks, 5)); // 120
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –∏–º–µ–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤—Ä–µ–º—è. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∑–∞–¥–∞—á–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
7Ô∏è‚É£ –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π
‚åõ–ó–∞–¥–∞—á–∞: –£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á. –ö–∞–∂–¥–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏–º–µ–µ—Ç –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∏ —Ü–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è –±–∏–∑–Ω–µ—Å–∞. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è, —á—Ç–æ–±—ã –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –∏ –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function chooseSolutions(solutions, timeLimit) {
  const dp = Array(timeLimit + 1).fill(0);

  solutions.forEach(solution => {
    for (let t = timeLimit; t >= solution.time; t--) {
      dp[t] = Math.max(dp[t], dp[t - solution.time] + solution.value);
    }
  });

  return dp[timeLimit];
}

const solutions = [
  { value: 120, time: 5 },
  { value: 60, time: 3 },
  { value: 80, time: 4 },
];

console.log(chooseSolutions(solutions, 8)); // 200
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ó–∞–¥–∞—á–∞ —Å—Ö–æ–∂–∞ —Å –∑–∞–¥–∞—á–µ–π –æ —Ä—é–∫–∑–∞–∫–µ, –≥–¥–µ –º—ã –ø—ã—Ç–∞–µ–º—Å—è –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –∏ –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏–π.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
8Ô∏è‚É£ –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
‚åõ–ó–∞–¥–∞—á–∞: –£ –Ω–∞—Å –µ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã —Å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –∏ –≤—Ä–µ–º–µ–Ω–µ–º. –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, —á—Ç–æ–±—ã –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Ö–æ–¥, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—è –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function investmentProjects(projects, maxTime) {
  const dp = Array(maxTime + 1).fill(0);

  projects.forEach(project => {
    for (let t = maxTime; t >= project.time; t--) {
      dp[t] = Math.max(dp[t], dp[t - project.time] + project.profit);
    }
  });

  return dp[maxTime];
}

const projects = [
  { profit: 1000, time: 5 },
  { profit: 1500, time: 6 },
  { profit: 800, time: 2 },
];

console.log(investmentProjects(projects, 8)); // 2000
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã —Ä–µ—à–∞–µ–º –∑–∞–¥–∞—á—É –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π, –≥–¥–µ —Ü–µ–ª—å ‚Äî –º–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–±—ã–ª—å, –Ω–µ –≤—ã—Ö–æ–¥—è –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –≤—Ä–µ–º–µ–Ω–∏.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
9Ô∏è‚É£ –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–µ—Ä—å
‚åõ–ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∑–∞–¥–∞—á–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ç–µ—Ä–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏ –∏ —à–∞–Ω—Å–∞–º–∏ –Ω–∞ —É—Å–ø–µ—Ö.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function minimizeLoss(items, maxWeight) {
  const dp = Array(maxWeight + 1).fill(0);

  items.forEach(item => {
    for (let w = maxWeight; w >= item.weight; w--) {
      dp[w] = Math.min(dp[w], dp[w - item.weight] + item.loss);
    }
  });

  return dp[maxWeight];
}

const items = [
  { loss: 50, weight: 10 },
  { loss: 30, weight: 5 },
  { loss: 20, weight: 3 }
];

console.log(minimizeLoss(items, 15)); // 80
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ó–∞–¥–∞—á–∞ –æ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–µ—Ä—å —Ä–µ—à–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –≥–¥–µ —Ü–µ–ª—å—é —è–≤–ª—è–µ—Ç—Å—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –ø–æ—Ç–µ—Ä—å —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –≤–µ—Å—É.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
‚ãô ‚ùç –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ:
---
üîü –ó–∞–¥–∞—á–∞ –æ —Ä—é–∫–∑–∞–∫–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
‚åõ–ó–∞–¥–∞—á–∞: –†–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É –æ —Ä—é–∫–∑–∞–∫–µ, –≥–¥–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å —Ä—é–∫–∑–∞–∫–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function knapsackWithConstraints(items, capacity, costLimit) {
  const dp = Array(capacity + 1).fill(0);

  items.forEach(item => {
    if (item.value <= costLimit) {
      for (let w = capacity; w >= item.weight; w--) {
        dp[w] = Math.max(dp[w], dp[w - item.weight] + item.value);
      }
    }
  });

  return dp[capacity];
}

const items = [
  { value: 60, weight: 10 },
  { value: 100, weight: 20 },
  { value: 120, weight: 30 }
];

console.log(knapsackWithConstraints(items, 50, 100)); // 220
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –¥–æ–±–∞–≤–∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω—ã.
---------------------------------------------------------------------------------------------
