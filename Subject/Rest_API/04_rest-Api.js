---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –†–∞–±–æ—Ç–∞ —Å REST API (GET, POST, PUT, DELETE, —Ä–∞–±–æ—Ç–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏):
---
4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö –∫ API.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import { useState, useEffect } from 'react';

function FetchDataWithErrorHandling() {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetch('https://jsonplaceholder.typicode.com/invalid-url')
      .then((response) => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then((data) => setData(data))
      .catch((error) => setError(error.message));
  }, []);

  if (error) return <p>Error: {error}</p>;
  if (!data) return <p>Loading...</p>;

  return (
    <ul>
      {data.map((item) => (
        <li key={item.id}>{item.title}</li>
      ))}
    </ul>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ï—Å–ª–∏ API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –º—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –≤—ã–≤–æ–¥–∏–º –µ—ë –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
---------------------------------------------------------------------------------------------  
