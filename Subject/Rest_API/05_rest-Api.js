---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –†–∞–±–æ—Ç–∞ —Å REST API (GET, POST, PUT, DELETE, —Ä–∞–±–æ—Ç–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏):
---
5. –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
‚åõ –ó–∞–¥–∞—á–∞: –û—Ç–ø—Ä–∞–≤—å—Ç–µ POST-–∑–∞–ø—Ä–æ—Å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏).
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import { useState } from 'react';

function PostDataWithHeaders() {
  const [name, setName] = useState('');

  const handleSubmit = (event) => {
    event.preventDefault();
    const data = { name };

    fetch('https://jsonplaceholder.typicode.com/users', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer YOUR_TOKEN_HERE',
      },
      body: JSON.stringify(data),
    })
      .then((response) => response.json())
      .then((data) => console.log('Data posted:', data))
      .catch((error) => console.error('Error posting data:', error));
  };

  return (
    <form onSubmit={handleSubmit}>
      <input
        type="text"
        value={name}
        onChange={(e) => setName(e.target.value)}
        placeholder="Enter your name"
      />
      <button type="submit">Submit</button>
    </form>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í `headers` –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ `Authorization`, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.
---------------------------------------------------------------------------------------------  
