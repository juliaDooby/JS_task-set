---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –†–∞–±–æ—Ç–∞ —Å REST API (GET, POST, PUT, DELETE, —Ä–∞–±–æ—Ç–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏):
---
14. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
‚åõ –ó–∞–¥–∞—á–∞: –ö–µ—à–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import { useState, useEffect } from 'react';

function FetchWithCache() {
  const [data, setData] = useState(null);

  useEffect(() => {
    const cachedData = localStorage.getItem('posts');
    if (cachedData) {
      setData(JSON.parse(cachedData));
    } else {
      fetch('https://jsonplaceholder.typicode.com/posts')
        .then((response) => response.json())
        .then((data) => {
          localStorage.setItem('posts', JSON.stringify(data));
          setData(data);
        })
        .catch((error) => console.error('Error fetching data:', error));
    }
  }, []);

  if (!data) return <p>Loading...</p>;

  return (
    <ul>
      {data.map((item) => (
        <li key={item.id}>{item.title}</li>
      ))}
    </ul>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –î–∞–Ω–Ω—ã–µ –∫–µ—à–∏—Ä—É—é—Ç—Å—è –≤ `localStorage` –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö.
---------------------------------------------------------------------------------------------  
