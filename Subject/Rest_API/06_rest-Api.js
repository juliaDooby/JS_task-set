---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –†–∞–±–æ—Ç–∞ —Å REST API (GET, POST, PUT, DELETE, —Ä–∞–±–æ—Ç–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏):
---
6. –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ FormData
‚åõ –ó–∞–¥–∞—á–∞: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ POST-–∑–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `FormData`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function PostFormData() {
  const handleSubmit = (event) => {
    event.preventDefault();
    const formData = new FormData();
    formData.append('name', 'John Doe');
    formData.append('email', 'john@example.com');

    fetch('https://jsonplaceholder.typicode.com/users', {
      method: 'POST',
      body: formData,
    })
      .then((response) => response.json())
      .then((data) => console.log('Form data submitted:', data))
      .catch((error) => console.error('Error:', error));
  };

  return (
    <form onSubmit={handleSubmit}>
      <button type="submit">Submit</button>
    </form>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑—É–µ–º `FormData` –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ multipart/form-data.
---------------------------------------------------------------------------------------------  
