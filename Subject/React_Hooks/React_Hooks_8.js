8. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å `useReducer`
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é `useReducer`.
–ü—Ä–∏–º–µ—Ä:
```javascript
import { useReducer } from 'react';

const initialState = { count: 0, name: '' };

function reducer(state, action) {
  switch (action.type) {
    case 'increment':
      return { ...state, count: state.count + 1 };
    case 'setName':
      return { ...state, name: action.payload };
    default:
      return state;
  }
}

function Counter() {
  const [state, dispatch] = useReducer(reducer, initialState);

  return (
    <div>
      <p>Count: {state.count}</p>
      <p>Name: {state.name}</p>
      <button onClick={() => dispatch({ type: 'increment' })}>Increment</button>
      <button onClick={() => dispatch({ type: 'setName', payload: 'Alice' })}>Set Name</button>
    </div>
  );
}
```
üéØ –†–µ—à–µ–Ω–∏–µ:
- `useReducer` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –∏ –ª–æ–≥–∏–∫–æ–π –¥–µ–π—Å—Ç–≤–∏–π.
---
