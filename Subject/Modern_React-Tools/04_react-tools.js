---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã React (React Router, React Query, Next.js):
---
4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Mutation —Å React Query
‚åõ –ó–∞–¥–∞—á–∞: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ POST-–∑–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `useMutation` –∏–∑ `React Query`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import { useMutation } from 'react-query';

async function postData(newData) {
  const response = await fetch('https://jsonplaceholder.typicode.com/posts', {
    method: 'POST',
    body: JSON.stringify(newData),
    headers: { 'Content-Type': 'application/json' },
  });
  return response.json();
}

function AddPost() {
  const mutation = useMutation(postData);

  const handleSubmit = () => {
    mutation.mutate({ title: 'New Post', body: 'This is a new post' });
  };

  return (
    <div>
      <button onClick={handleSubmit}>Add Post</button>
      {mutation.isLoading && <div>Adding post...</div>}
      {mutation.isError && <div>Error: {mutation.error.message}</div>}
      {mutation.isSuccess && <div>Post added!</div>}
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `useMutation` –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ —Å–æ–∑–¥–∞–Ω–∏–µ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –ú—ã –≤—ã–∑—ã–≤–∞–µ–º `mutate` –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
---------------------------------------------------------------------------------------------  
