---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–º–µ–º–æ–∏–∑–∞—Ü–∏—è, —Ä–∞–∑–±–∏–µ–Ω–∏–µ –∫–æ–¥–∞, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö —Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤):
---
11. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `Intersection Observer` –¥–ª—è –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–µ–Ω–∏–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `IntersectionObserver`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { useEffect, useRef, useState } from 'react';

function LazyImage({ src, alt }) {
  const [loaded, setLoaded] = useState(false);
  const imgRef = useRef();

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setLoaded(true);
          observer.disconnect();
        }
      },
      { threshold: 0.1 }
    );

    observer.observe(imgRef.current);

    return () => observer.disconnect();
  }, []);

  return loaded ? <img ref={imgRef} src={src} alt={alt} /> : <div>Loading...</div>;
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `IntersectionObserver` –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, —á—Ç–æ —ç–∫–æ–Ω–æ–º–∏—Ç —Ä–µ—Å—É—Ä—Å—ã –∏ –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
---------------------------------------------------------------------------------------------  
