---------------------------------------------------------------------------------------------
üìå [–ó–ê–î–ê–ß–ò MIDDLE/SENIOR –í –û–î–ù–û–ú –ò–ó–í–ï–°–¢–ù–û–ú –ë–ê–ù–ö–ï ‚úÖ]:
---------------------
‚ãô ‚ùç –î–∞–Ω –Ω–µ —Å–ª–æ–∂–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ —Ä–µ–∞–∫—Ç–µ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–µ–≤—å—é (–∑–∞—é–∑–∞—Ç—å —Ö—É–∫–∏ useMemo / useCallback, –≤—ã–Ω–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ —á—Ç–æ-—Ç–æ —Ç–∞–º –µ—â–µ –±—ã–ª–æ) ?
---
44. –î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –≤–∞—à –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ –ø—Ä–æ–≤–µ–¥–µ–º —Ä–µ–≤—å—é, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è –µ–≥–æ —Å –ø–æ–º–æ—â—å—é —Ö—É–∫–æ–≤ `useMemo` –∏ `useCallback`, –∞ —Ç–∞–∫–∂–µ –≤—ã–Ω–æ—Å—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
```javascript
import React, { useState, useEffect } from 'react';

const MyComponent = () => {
  const [count, setCount] = useState(0);
  const [doubleCount, setDoubleCount] = useState(0);

  useEffect(() => {
    const double = count * 2;
    setDoubleCount(double);
  }, [count]);

  const handleIncrement = () => {
    setCount(count + 1);
  };

  const handleDecrement = () => {
    setCount(count - 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <p>Double Count: {doubleCount}</p>
      <button onClick={handleIncrement}>Increment</button>
      <button onClick={handleDecrement}>Decrement</button>
    </div>
  );
};

export default MyComponent;
```
–î–∞–≤–∞–π—Ç–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —ç—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:
1. –•—Ä–∞–Ω–µ–Ω–∏–µ —É–¥–≤–æ–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é `useMemo`:
 ```javascript
 const doubleCount = useMemo(() => count * 2, [count]);
 ```
2. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π —Å –ø–æ–º–æ—â—å—é `useCallback`:
 ```javascript
 const handleIncrement = useCallback(() => {
   setCount((prevCount) => prevCount + 1);
 }, []);

 const handleDecrement = useCallback(() => {
   setCount((prevCount) => prevCount - 1);
 }, []);
 ```
3. –í—ã–Ω–æ—Å –ø–æ–≤—Ç–æ—Ä—è—é—â–µ–≥–æ—Å—è –∫–æ–¥–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é:
 ```javascript
 const increment = () => {
   setCount((prevCount) => prevCount + 1);
 };

 const decrement = () => {
   setCount((prevCount) => prevCount - 1);
 };
 ```
–í–æ—Ç –ø–æ–ª–Ω—ã–π –∫–æ–¥ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏:
```javascript
import React, { useState, useEffect, useMemo, useCallback } from 'react';

const MyComponent = () => {
  const [count, setCount] = useState(0);

  const doubleCount = useMemo(() => count * 2, [count]);

  const handleIncrement = useCallback(() => {
    setCount((prevCount) => prevCount + 1);
  }, []);

  const handleDecrement = useCallback(() => {
    setCount((prevCount) => prevCount - 1);
  }, []);

  return (
    <div>
      <p>Count: {count}</p>
      <p>Double Count: {doubleCount}</p>
      <button onClick={handleIncrement}>Increment</button>
      <button onClick={handleDecrement}>Decrement</button>
    </div>
  );
};

export default MyComponent;
```
–¢–µ–ø–µ—Ä—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—É–∫–æ–≤ `useMemo` –∏ `useCallback`, –∞ —Ç–∞–∫–∂–µ –≤—ã–Ω–µ—Å–µ–Ω –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
/–î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ–¥–µ–º —Ä–µ–≤—å—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è –µ–≥–æ —Å –ø–æ–º–æ—â—å—é —Ö—É–∫–æ–≤ `useMemo` –∏ `useCallback`, –∞ —Ç–∞–∫–∂–µ –≤—ã–Ω–æ—Å—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
```javascript
import React, { useState, useEffect } from 'react';

const MyComponent = () => {
  const [count, setCount] = useState(0);
  const [doubleCount, setDoubleCount] = useState(0);

  useEffect(() => {
    const double = count * 2;
    setDoubleCount(double);
  }, [count]);

  const handleIncrement = () => {
    setCount(count + 1);
  };

  const handleDecrement = () => {
    setCount(count - 1);
  };

  return (
    <div>
      <p>Count: {count}</p>
      <p>Double Count: {doubleCount}</p>
      <button onClick={handleIncrement}>Increment</button>
      <button onClick={handleDecrement}>Decrement</button>
    </div>
  );
};

export default MyComponent;
```
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥:
```javascript
import React, { useState, useEffect, useMemo, useCallback } from 'react';

const MyComponent = () => {
  const [count, setCount] = useState(0);

  const doubleCount = useMemo(() => count * 2, [count]);

  useEffect(() => {
    const double = count * 2;
    setDoubleCount(double);
  }, [count]);

  const handleIncrement = useCallback(() => {
    setCount(prevCount => prevCount + 1);
  }, []);

  const handleDecrement = useCallback(() => {
    setCount(prevCount => prevCount - 1);
  }, []);

  return (
    <div>
      <p>Count: {count}</p>
      <p>Double Count: {doubleCount}</p>
      <button onClick={handleIncrement}>Increment</button>
      <button onClick={handleDecrement}>Decrement</button>
    </div>
  );
};

export default MyComponent;
```
–¢–µ–ø–µ—Ä—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—É–∫–æ–≤ `useMemo` –∏ `useCallback`, –∞ —Ç–∞–∫–∂–µ –≤—ã–Ω–µ—Å–µ–Ω –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
---------------------------------------------------------------------------------------------
