---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
0. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å `useState` –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `useState` –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { useState } from 'react';

function ParentComponent() {
  const [count, setCount] = useState(0);

  return (
    <div>
      <h1>Count: {count}</h1>
      <ChildComponent count={count} setCount={setCount} />
    </div>
  );
}

function ChildComponent({ count, setCount }) {
  return (
    <button onClick={() => setCount(count + 1)}>
      Increment
    </button>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ, –∞ –¥–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ `props`. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `useContext` –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç
‚åõ –ó–∞–¥–∞—á–∞: –ü–µ—Ä–µ–¥–∞—á–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ—Ä–µ–∑ Context API –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å props –Ω–∞ –∫–∞–∂–¥–æ–º —É—Ä–æ–≤–Ω–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { createContext, useState, useContext } from 'react';

// –°–æ–∑–¥–∞–µ–º Context
const CountContext = createContext();

function ParentComponent() {
  const [count, setCount] = useState(0);

  return (
    <CountContext.Provider value={{ count, setCount }}>
      <ChildComponent />
    </CountContext.Provider>
  );
}

function ChildComponent() {
  const { count, setCount } = useContext(CountContext);

  return (
    <div>
      <h2>Count: {count}</h2>
      <button onClick={() => setCount(count + 1)}>Increment</button>
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –≤—Å–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–∫–∏–¥—ã–≤–∞—Ç—å –∏—Ö —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Redux –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Redux –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// actions.js
export const increment = () => ({
  type: 'INCREMENT',
});

// reducer.js
const initialState = { count: 0 };
export const counterReducer = (state = initialState, action) => {
  switch (action.type) {
    case 'INCREMENT':
      return { ...state, count: state.count + 1 };
    default:
      return state;
  }
};

// store.js
import { createStore } from 'redux';
import { counterReducer } from './reducer';
export const store = createStore(counterReducer);

// App.js
import React from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { increment } from './actions';

function App() {
  const count = useSelector((state) => state.count);
  const dispatch = useDispatch();

  return (
    <div>
      <h1>Count: {count}</h1>
      <button onClick={() => dispatch(increment())}>Increment</button>
    </div>
  );
}
```

–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- Redux –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º. –° –ø–æ–º–æ—â—å—é `useSelector` –º—ã –ø–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∞ —Å –ø–æ–º–æ—â—å—é `useDispatch` –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—à–µ–Ω—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å `useReducer`
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `useReducer` –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { useReducer } from 'react';

const initialState = { count: 0 };

function reducer(state, action) {
  switch (action.type) {
    case 'INCREMENT':
      return { count: state.count + 1 };
    case 'DECREMENT':
      return { count: state.count - 1 };
    default:
      return state;
  }
}

function Counter() {
  const [state, dispatch] = useReducer(reducer, initialState);

  return (
    <div>
      <h1>Count: {state.count}</h1>
      <button onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>
      <button onClick={() => dispatch({ type: 'DECREMENT' })}>Decrement</button>
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `useReducer` –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π, –∫–æ–≥–¥–∞ –ª–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `useState`. –û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ Redux, –Ω–æ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
4. –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å Context API + useReducer
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `useReducer` –≤ —Å–≤—è–∑–∫–µ —Å `Context API` –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–≥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { createContext, useReducer, useContext } from 'react';

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
const CountContext = createContext();

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–¥—É–∫—Ç–æ—Ä
function countReducer(state, action) {
  switch (action.type) {
    case 'INCREMENT':
      return { count: state.count + 1 };
    default:
      return state;
  }
}

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä
function CountProvider({ children }) {
  const [state, dispatch] = useReducer(countReducer, { count: 0 });

  return (
    <CountContext.Provider value={{ state, dispatch }}>
      {children}
    </CountContext.Provider>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
function Counter() {
  const { state, dispatch } = useContext(CountContext);

  return (
    <div>
      <h1>Count: {state.count}</h1>
      <button onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>
    </div>
  );
}

// App
function App() {
  return (
    <CountProvider>
      <Counter />
    </CountProvider>
  );
}
```

–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –° –ø–æ–º–æ—â—å—é `useReducer` –∏ `Context API` –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø—Ä–∏ —ç—Ç–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –º–æ–≥—É—Ç –ª–µ–≥–∫–æ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
5. –†–µ–¥—É–∫—Å —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ (Thunk)
‚åõ –ó–∞–¥–∞—á–∞: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º middleware `redux-thunk`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// actions.js
export const fetchPosts = () => {
  return async (dispatch) => {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts');
    const posts = await response.json();
    dispatch({ type: 'SET_POSTS', posts });
  };
};

// reducer.js
const initialState = { posts: [] };
export const postsReducer = (state = initialState, action) => {
  switch (action.type) {
    case 'SET_POSTS':
      return { ...state, posts: action.posts };
    default:
      return state;
  }
};

// store.js
import { createStore, applyMiddleware } from 'redux';
import thunk from 'redux-thunk';
import { postsReducer } from './reducer';

const store = createStore(postsReducer, applyMiddleware(thunk));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑—É—è `redux-thunk`, –º—ã –º–æ–∂–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤ Redux, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ –∑–∞–ø—Ä–æ—Å—ã –∫ API, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —ç–∫—à–µ–Ω—ã –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
6. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å Redux –∏ Thunks
‚åõ –ó–∞–¥–∞—á–∞: –ó–∞–≥—Ä—É–∂–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –ø–æ–º–æ—â—å—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —ç–∫—à–µ–Ω–æ–≤ –≤ Redux.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
export const fetchData = () => {
  return async (dispatch) => {
    const [posts, users] = await Promise.all([
      fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()),
      fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json())
    ]);
    dispatch({ type: 'SET_DATA', payload: { posts, users } });
  };
};
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑—É–µ–º `Promise.all` –¥–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö, —É–ª—É—á—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞ —Å—á–µ—Ç —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
7. –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å Redux Toolkit
‚åõ –ó–∞–¥–∞—á–∞: –£–ø—Ä–æ—Å—Ç–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Redux —Å –ø–æ–º–æ—â—å—é `Redux Toolkit`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// store.js
import { configureStore, createSlice } from '@reduxjs/toolkit';

const countSlice = createSlice({
  name: 'count',
  initialState: { count: 0 },
  reducers: {
    increment: (state) => { state.count += 1; },
    decrement: (state) => { state.count -= 1; },
  },
});

const store = configureStore({
  reducer: countSlice.reducer,
});

export const { increment, decrement } = countSlice.actions;
export default store;

// App.js
import React from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { increment, decrement } from './store';

function Counter() {
  const count = useSelector((state) =>

 state.count);
  const dispatch = useDispatch();

  return (
    <div>
      <h1>Count: {count}</h1>
      <button onClick={() => dispatch(increment())}>Increment</button>
      <button onClick={() => dispatch(decrement())}>Decrement</button>
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `Redux Toolkit` —É–ø—Ä–æ—â–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å Redux, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è –≥–æ—Ç–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–¥—å—é—Å–µ—Ä–æ–≤ –∏ —ç–∫—à–µ–Ω–æ–≤.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
8. –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Redux –∏ Thunks
‚åõ –ó–∞–¥–∞—á–∞: –ó–∞–≥—Ä—É–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Redux –∏ middleware –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —ç–∫—à–µ–Ω–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// actions.js
export const fetchPosts = () => {
  return async (dispatch) => {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts');
    const posts = await response.json();
    dispatch({ type: 'SET_POSTS', posts });
  };
};

// reducer.js
const initialState = { posts: [] };
export const postsReducer = (state = initialState, action) => {
  switch (action.type) {
    case 'SET_POSTS':
      return { ...state, posts: action.posts };
    default:
      return state;
  }
};

// App.js
import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { fetchPosts } from './actions';

function Posts() {
  const dispatch = useDispatch();
  const posts = useSelector((state) => state.posts);

  useEffect(() => {
    dispatch(fetchPosts());
  }, [dispatch]);

  return (
    <div>
      {posts.length === 0 ? (
        <p>Loading...</p>
      ) : (
        posts.map(post => <div key={post.id}>{post.title}</div>)
      )}
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ Redux. –° –ø–æ–º–æ—â—å—é middleware `redux-thunk` –º—ã –º–æ–∂–µ–º –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
9. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `useContext` –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `useContext` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Redux.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { createContext, useContext, useState } from 'react';

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
const CountContext = createContext();

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä
function CountProvider({ children }) {
  const [count, setCount] = useState(0);
  return (
    <CountContext.Provider value={{ count, setCount }}>
      {children}
    </CountContext.Provider>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
function Counter() {
  const { count, setCount } = useContext(CountContext);

  return (
    <div>
      <h1>Count: {count}</h1>
      <button onClick={() => setCount(count + 1)}>Increment</button>
    </div>
  );
}

// App.js
function App() {
  return (
    <CountProvider>
      <Counter />
    </CountProvider>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã —Å–æ–∑–¥–∞—ë–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `useContext` –∏ `useState`. –ú—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º Redux, –Ω–æ –º–æ–∂–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Å–µ–º –¥–æ—á–µ—Ä–Ω–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
10. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `React.memo` –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤
‚åõ –ó–∞–¥–∞—á–∞: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é `React.memo`, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ª–∏—à–Ω–∏–µ —Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { useState } from 'react';

const ChildComponent = React.memo(({ count }) => {
  console.log('ChildComponent rendered');
  return <h2>Count: {count}</h2>;
});

function ParentComponent() {
  const [count, setCount] = useState(0);
  const [otherState, setOtherState] = useState('Some text');

  return (
    <div>
      <ChildComponent count={count} />
      <button onClick={() => setCount(count + 1)}>Increment</button>
      <button onClick={() => setOtherState('Updated text')}>Update Other State</button>
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `React.memo` –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö —Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤, –µ—Å–ª–∏ –ø—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, `ChildComponent` –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ `count`.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
11. –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ `useState` –∏ `useEffect` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
‚åõ –ó–∞–¥–∞—á–∞: –ó–∞–≥—Ä—É–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ API –∏ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é `useState` –∏ `useEffect`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { useState, useEffect } from 'react';

function FetchData() {
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch('https://jsonplaceholder.typicode.com/posts')
      .then(response => response.json())
      .then(data => {
        setData(data);
        setLoading(false);
      });
  }, []);

  if (loading) {
    return <div>Loading...</div>;
  }

  return (
    <div>
      {data.map(post => (
        <div key={post.id}>
          <h2>{post.title}</h2>
        </div>
      ))}
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `useEffect` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤) –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –° –ø–æ–º–æ—â—å—é `useState` –º—ã —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
12. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `useReducer`
‚åõ –ó–∞–¥–∞—á–∞: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å –ø–æ–º–æ—â—å—é `useReducer`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import React, { useReducer } from 'react';

const initialState = { count: 0, text: '' };

function reducer(state, action) {
  switch (action.type) {
    case 'INCREMENT':
      return { ...state, count: state.count + 1 };
    case 'UPDATE_TEXT':
      return { ...state, text: action.text };
    default:
      return state;
  }
}

function MyComponent() {
  const [state, dispatch] = useReducer(reducer, initialState);

  return (
    <div>
      <h1>Count: {state.count}</h1>
      <button onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>

      <input
        type="text"
        value={state.text}
        onChange={(e) => dispatch({ type: 'UPDATE_TEXT', text: e.target.value })}
      />
      <p>{state.text}</p>
    </div>
  );
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- `useReducer` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π, –≥–¥–µ –Ω–∞–º –Ω—É–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤ –æ–¥–Ω–æ–º —Ä–µ–¥—å—é—Å–µ—Ä–µ.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
13. –í—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ —Å Redux
‚åõ –ó–∞–¥–∞—á–∞: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ —Å Redux –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// actions.js
export const fetchData = () => {
  return async (dispatch) => {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts');
    const posts = await response.json();
    dispatch({ type: 'FETCH_DATA', payload: posts });
  };
};

// reducer.js
const initialState = { posts: [] };
export const postsReducer = (state = initialState, action) => {
  switch (action.type) {
    case 'FETCH_DATA':
      return { ...state, posts: action.payload };
    default:
      return state;
  }
};

// store.js
import { createStore, applyMiddleware } from 'redux';
import thunk from 'redux-thunk';
import { postsReducer } from './reducer';

const store = createStore(postsReducer, applyMiddleware(thunk));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `redux-thunk` –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —ç–∫—à–µ–Ω–æ–≤ –∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏, –ø–æ–ª—É—á–∞–µ–º—ã–º–∏ —Å API. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ API —Å Redux.
---------------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------------- 
‚ãô ‚ùç –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ React (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, Context API, Redux):
---
14. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Redux DevTools –¥–ª—è –¥–µ–±–∞–≥–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redux DevTools –¥–ª—è –¥–µ–±–∞–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —ç–∫—à–µ–Ω–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
// store.js
import { createStore } from 'redux';
import { postsReducer } from './reducer';

const store = createStore(
  postsReducer,
  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()
);

export default store;
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º Redux DevTools –¥–ª—è –¥–µ–±–∞–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —ç–∫—à–µ–Ω–æ–≤. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
---------------------------------------------------------------------------------------------  
