---------------------------------------------------------------------------------------------
‚ãô ‚ùç –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã JavaScript (ES6+):
---
‚ãô ‚ùç –ü–æ–ú–∞–ø–∏—Ç—å –∫–ª–∞—Å—Å—ã (map):
---
35.
2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ React
–í React –º–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤ —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `classnames` –∏–ª–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏.
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫
```jsx
import React, { useState } from "react";

function ClassMapper() {
  const [items, setItems] = useState([
    { id: 1, name: "Item 1", isSelected: false },
    { id: 2, name: "Item 2", isSelected: true },
    { id: 3, name: "Item 3", isSelected: false },
  ]);

  const toggleSelection = (id) => {
    setItems((prevItems) =>
      prevItems.map((item) =>
        item.id === id ? { ...item, isSelected: !item.isSelected } : { ...item, isSelected: false }
      )
    );
  };

  return (
    <ul>
      {items.map((item) => (
        <li
          key={item.id}
          className={`item ${item.isSelected ? "selected" : ""}`}
          onClick={() => toggleSelection(item.id)}
        >
          {item.name}
        </li>
      ))}
    </ul>
  );
}

export default ClassMapper;
```
üéØ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ `classnames`
–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É:
```bash
npm install classnames
```
–ò—Å–ø–æ–ª—å–∑—É–µ–º `classnames` –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞ –∫–ª–∞—Å—Å–æ–≤:
```jsx
import React, { useState } from "react";
import classNames from "classnames";

function ClassMapper() {
  const [items, setItems] = useState([
    { id: 1, name: "Item 1", isSelected: false },
    { id: 2, name: "Item 2", isSelected: true },
    { id: 3, name: "Item 3", isSelected: false },
  ]);

  const toggleSelection = (id) => {
    setItems((prevItems) =>
      prevItems.map((item) =>
        item.id === id ? { ...item, isSelected: !item.isSelected } : { ...item, isSelected: false }
      )
    );
  };

  return (
    <ul>
      {items.map((item) => (
        <li
          key={item.id}
          className={classNames("item", { selected: item.isSelected })}
          onClick={() => toggleSelection(item.id)}
        >
          {item.name}
        </li>
      ))}
    </ul>
  );
}

export default ClassMapper;
```
---
CSS –¥–ª—è React
```css
.item {
  padding: 10px;
  margin: 5px 0;
  border: 1px solid #ccc;
  cursor: pointer;
}

.selected {
  background-color: #007bff;
  color: white;
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ React-–∫–æ–¥–∞
1. –°–æ—Å—Ç–æ—è–Ω–∏–µ:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `useState` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.
2. –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤:
   - –ë–µ–∑ `classnames`:
     ```jsx
     className={`item ${item.isSelected ? "selected" : ""}`}
     ```
   - –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `classnames`:
     ```jsx
     classNames("item", { selected: item.isSelected })
     ```
3. –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
   - `setItems` –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞.
---
–°—Ä–∞–≤–Ω–µ–Ω–∏–µ JavaScript –∏ React
| –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞   | Vanilla JavaScript                             | React                                |
|-----------------------|----------------------------------------------------|------------------------------------------|
| –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö | –†—É—á–Ω–∞—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞ DOM                             | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `state` –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–Ω–¥–µ—Ä |
| –ú–∞–ø–ø–∏–Ω–≥ –∫–ª–∞—Å—Å–æ–≤   | `classList.add` –∏ `classList.remove`               | –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `className` –∏–ª–∏ `classnames` |
| –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ | –ë—ã—Å—Ç—Ä–µ–µ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á                     | –ë–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ |
---------------------------------------------------------------------------------------------
