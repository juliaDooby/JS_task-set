---------------------------------------------------------------------------------------------
‚ãô ‚ùç async/await:
---
1. –ü—Ä–æ—Å—Ç–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `async/await`
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `"Hello, Async/Await"` —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `async/await`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function greet() {
  await delay(1000);
  return "Hello, Async/Await";
}

greet().then(console.log); // "Hello, Async/Await"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `await` –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–º–∏—Å–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
‚åõ –ó–∞–¥–∞—á–∞: –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫—É –≤ `async` —Ñ—É–Ω–∫—Ü–∏–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function errorDemo() {
  throw new Error("Something went wrong");
}

async function run() {
  try {
    await errorDemo();
  } catch (error) {
    console.log(error.message); // "Something went wrong"
  }
}

run();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `try...catch` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ `async` —Ñ—É–Ω–∫—Ü–∏—è—Ö.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
3. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
‚åõ –ó–∞–¥–∞—á–∞: –í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–≤–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function task1() {
  return "Task 1 completed";
}

async function task2() {
  return "Task 2 completed";
}

async function runTasks() {
  const result1 = await task1();
  console.log(result1); // "Task 1 completed"
  const result2 = await task2();
  console.log(result2); // "Task 2 completed"
}

runTasks();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏–¥—ë—Ç –ø–æ –ø–æ—Ä—è–¥–∫—É.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
4. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
‚åõ –ó–∞–¥–∞—á–∞: –í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–≤–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function task1() {
  return "Task 1 completed";
}

async function task2() {
  return "Task 2 completed";
}

async function runTasks() {
  const [result1, result2] = await Promise.all([task1(), task2()]);
  console.log(result1, result2); // "Task 1 completed", "Task 2 completed"
}

runTasks();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `Promise.all` –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞—á–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
5. `await` –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞
‚åõ –ó–∞–¥–∞—á–∞: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ –∑–∞–¥–∞—á.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function processArray(arr) {
  for (const item of arr) {
    const result = await new Promise(resolve => setTimeout(() => resolve(item * 2), 500));
    console.log(result);
  }
}

processArray([1, 2, 3]); // 2, 4, 6
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `await` –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
6. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Å—Å–∏–≤–∞
‚åõ –ó–∞–¥–∞—á–∞: –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function processArray(arr) {
  const results = await Promise.all(
    arr.map(item => new Promise(resolve => setTimeout(() => resolve(item * 2), 500)))
  );
  console.log(results); // [2, 4, 6]
}

processArray([1, 2, 3]);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `Promise.all` –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
7. –§—É–Ω–∫—Ü–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `wait`, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function wait(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function run() {
  console.log("Start");
  await wait(1000);
  console.log("1 second passed");
}

run();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `await` –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–∂–∏–¥–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–º–∏—Å–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
8. –ü—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
‚åõ –ó–∞–¥–∞—á–∞: –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –≤ —Ü–µ–ø–æ—á–∫–µ –≤—ã–∑–æ–≤–æ–≤ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –æ—à–∏–±–∫–∞?
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function task1() {
  return "Task 1";
}

async function task2() {
  throw new Error("Task 2 failed");
}

async function runTasks() {
  try {
    const result1 = await task1();
    console.log(result1); // "Task 1"
    const result2 = await task2(); // –û—à–∏–±–∫–∞
    console.log(result2);
  } catch (error) {
    console.log(error.message); // "Task 2 failed"
  }
}

runTasks();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ï—Å–ª–∏ –ø—Ä–æ–º–∏—Å –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É, –æ–Ω–∞ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ –±–ª–æ–∫–µ `catch`.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
9. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `finally`
‚åõ –ó–∞–¥–∞—á–∞: –î–æ–±–∞–≤—å—Ç–µ `finally` –≤ `async` —Ñ—É–Ω–∫—Ü–∏—é.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function run() {
  try {
    const result = await Promise.resolve("Success");
    console.log(result); // "Success"
  } catch (error) {
    console.log(error.message);
  } finally {
    console.log("Cleanup"); // "Cleanup"
  }
}

run();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `finally` –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–º–∏—Å–∞.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
10. –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—à–∏–±–æ–∫
‚åõ –ó–∞–¥–∞—á–∞: –ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫–∏ –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤?
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function task1() {
  throw new Error("Task 1 failed");
}

async function task2() {
  throw new Error("Task 2 failed");
}

async function runTasks() {
  const results = await Promise.allSettled([task1(), task2()]);
  results.forEach(result => {
    if (result.status === "fulfilled") {
      console.log(result.value);
    } else {
      console.log(result.reason.message);
    }
  });
}

runTasks();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `Promise.allSettled` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤, –≤–∫–ª—é—á–∞—è –æ—à–∏–±–∫–∏.
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
11. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ä–µ–∫—É—Ä—Å–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ä–µ–∫—É—Ä—Å–∏—é –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —á–∏—Å–ª–∞ –¥–æ 5.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function countDown(n) {
  if (n === 0) return;
  console.log(n);
  await new Promise(resolve => setTimeout(resolve, 500));
  await countDown(n - 1);
}

countDown(5); // 5, 4, 3, 2, 1
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
12. –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ `fetch`
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `fetch` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function fetchData() {
  const response = await fetch("https://jsonplaceholder.typicode.com/posts/1");
  const data = await response.json();
  console.log(data);
}

fetchData();
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
13. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏
‚åõ –ó–∞–¥–∞—á–∞: –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫—É –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ `fetch`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function fetchData() {
  try {
    const response = await fetch("https://invalid-url.com");
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.log("Error:", error.message);
  }
}

fetchData();
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
14. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤ –∫–ª–∞—Å—Å–µ
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≤ –∫–ª–∞—Å—Å–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
class DataLoader {
  async load() {
    return "Data loaded";
  }
}

const loader = new DataLoader();
loader.load().then(console.log); // "Data loaded"
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
15. –ü—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π
‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–æ–ª–±—ç–∫–æ–º –≤ `async/await`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function delay(ms, callback) {
  setTimeout(() => callback(null, "Done"), ms);
}

function promisify(fn) {
  return function(...args) {
    return new Promise((resolve, reject) => {
      fn(...args, (err, result) => {
        if (err) reject(err);
        else resolve(result);
      });
    });
  };
}

const delayAsync = promisify(delay);
delayAsync(1000).then(console.log); // "Done"
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
16. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `async/await`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function timer(seconds) {
  for (let i = seconds; i >= 0; i--) {
    console.log(i);
    await new Promise(resolve => setTimeout(resolve, 1000));
  }
}

timer(5); // 5, 4, 3, 2, 1, 0
```
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------  
17. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏ 3 —Ä–∞–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
async function retry(task, retries) {
  try {
    return await task();
  } catch (error) {
    if (retries > 0) {
      console.log("Retrying...");
      return retry(task, retries - 1);
    }
    throw error;
  }
}

async function task() {
  throw new Error("Task failed");
}

retry(task, 3).catch(console.log); // "Task failed" –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫
```
---------------------------------------------------------------------------------------------
