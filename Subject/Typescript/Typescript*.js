---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
1. –ü—Ä–æ—Å—Ç–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
‚åõ –ó–∞–¥–∞—á–∞: –û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Ç–∏–ø–æ–º `string`.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
const message: string = "Hello, TypeScript!";
console.log(message);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `: string` —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è `message` –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
2. –¢–∏–ø–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—É–º–º—É.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
function add(a: number, b: number): number {
  return a + b;
}

console.log(add(2, 3)); // 5
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –£–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (`a: number, b: number`) –∏ —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (`: number`).
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
3. –¢–∏–ø–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
const numbers: number[] = [1, 2, 3, 4];
console.log(numbers);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –¢–∏–ø `number[]` —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –º–∞—Å—Å–∏–≤ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
4. –¢–∏–ø–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞
‚åõ –ó–∞–¥–∞—á–∞: –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –æ–±—ä–µ–∫—Ç —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
const user: { name: string; age: number } = {
  name: "Alice",
  age: 25,
};
console.log(user);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –£–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–∏–ø—ã —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞: `name: string` –∏ `age: number`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
5. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç, –≥–¥–µ –æ–¥–Ω–æ –∏–∑ —Å–≤–æ–π—Å—Ç–≤ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
type User = {
  name: string;
  age?: number;
};

const user: User = { name: "Bob" }; // –í–æ–∑—Ä–∞—Å—Ç –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
console.log(user);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `age?: number` —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ `age` –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
6. –¢–∏–ø–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
function greet(name: string = "Guest"): string {
  return `Hello, ${name}!`;
}

console.log(greet()); // Hello, Guest!
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ü–∞—Ä–∞–º–µ—Ç—Ä—É `name` –∑–∞–¥–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é `"Guest"`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
7. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `enum`
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
enum Role {
  Admin = "Admin",
  User = "User",
  Guest = "Guest",
}

const userRole: Role = Role.User;
console.log(userRole); // "User"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `enum` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏–π.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
8. –¢–∏–ø–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ (callback)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–ª–±—ç–∫.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
function processUser(id: number, callback: (id: number) => string): string {
  return callback(id);
}

const result = processUser(1, (id) => `User ID: ${id}`);
console.log(result); // "User ID: 1"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –¢–∏–ø –∫–æ–ª–±—ç–∫–∞ –∑–∞–¥–∞—ë—Ç—Å—è `(id: number) => string`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
9. –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚åõ –ó–∞–¥–∞—á–∞: –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
interface User {
  name: string;
  age: number;
}

const user: User = { name: "Alice", age: 30 };
console.log(user);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `interface` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–±—ä–µ–∫—Ç–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
10. –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ (Union Types)
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ —á–∏—Å–ª–æ–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
let value: string | number;
value = "Hello";
console.log(value); // "Hello"
value = 42;
console.log(value); // 42
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `string | number` —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –æ–±–∞ —Ç–∏–ø–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
11. –¢–∏–ø `any`
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
let value: any = "Hello";
console.log(value); // "Hello"
value = 42;
console.log(value); // 42
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –¢–∏–ø `any` –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ª—é–±–æ–≥–æ —Ç–∏–ø–∞, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–∑–±–µ–≥–∞—Ç—å –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
12. –ù–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π –º–∞—Å—Å–∏–≤ (`readonly`)
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
const readonlyArray: readonly number[] = [1, 2, 3];
// readonlyArray.push(4); // –û—à–∏–±–∫–∞
console.log(readonlyArray);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `readonly` –∑–∞–ø—Ä–µ—â–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
13. –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏
‚åõ –ó–∞–¥–∞—á–∞: –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π—Ç–µ –æ–±—ä–µ–∫—Ç —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
const user: { name: string; age: number } = { name: "Alice", age: 25 };
const { name, age }: { name: string; age: number } = user;

console.log(name, age); // "Alice", 25
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –£–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∏–ø –¥–ª—è –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
14. –¢–∏–ø–∏–∑–∞—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
‚åõ –ó–∞–¥–∞—á–∞: –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
function square(num: number): number {
  return num * num;
}

console.log(square(4)); // 16
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –¢–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–¥–∞—ë—Ç—Å—è —á–µ—Ä–µ–∑ `: number`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
15. –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–∏–ø—ã (`type`)
‚åõ –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–∏–ø –¥–ª—è –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
type StringArray = string[];

const names: StringArray = ["Alice", "Bob", "Charlie"];
console.log(names);
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `type` —Å–æ–∑–¥–∞—ë—Ç –ø—Å–µ–≤–¥–æ–Ω–∏–º –¥–ª—è —Ç–∏–ø–æ–≤.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
16. –¢–∏–ø–∏–∑–∞—Ü–∏—è `React` –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ–ø—Å–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
import React from "react";

type Props = {
  name: string;
};

const Greeting: React.FC<Props> = ({ name }) => {
  return <h1>Hello, {name}!</h1>;
};

export default Greeting;
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `React.FC<Props>` –¥–ª—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–ø—Å–æ–≤.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç Typescript:
---
17. –¢–∏–ø–∏–∑–∞—Ü–∏—è `fetch` –∑–∞–ø—Ä–æ—Å–∞
‚åõ –ó–∞–¥–∞—á–∞: –°–¥–µ–ª–∞–π—Ç–µ —Ç–∏–ø–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```typescript
type User = {
  id: number;
  name: string;
};

async function fetchUser(): Promise<User> {
  const response = await fetch("https://jsonplaceholder.typicode.com/users/1");
  return response.json();
}

fetchUser().then((user) => console.log(user));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: `Promise<User>` —É–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–º.
---------------------------------------------------------------------------------------------  
