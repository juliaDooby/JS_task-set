---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
8. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Redux –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Redux –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ React.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Redux –∏ React-Redux:
```bash
npm install redux react-redux
```
2. –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:
```javascript
import { createStore } from 'redux';
import { Provider, useDispatch, useSelector } from 'react-redux';

// Reducer
function counterReducer(state = { count: 0 }, action) {
  switch (action.type) {
    case 'INCREMENT':
      return { count: state.count + 1 };
    case 'DECREMENT':
      return { count: state.count - 1 };
    default:
      return state;
  }
}

// Store
const store = createStore(counterReducer);

// Component
function Counter() {
  const dispatch = useDispatch();
  const count = useSelector(state => state.count);

  return (
    <div>
      <p>{count}</p>
      <button onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>
      <button onClick={() => dispatch({ type: 'DECREMENT' })}>Decrement</button>
    </div>
  );
}

function App() {
  return (
    <Provider store={store}>
      <Counter />
    </Provider>
  );
}

export default App;
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã —Å–æ–∑–¥–∞—ë–º Redux store —Å –ø—Ä–æ—Å—Ç—ã–º —Ä–µ–¥—å—é—Å–µ—Ä–æ–º, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å—á—ë—Ç—á–∏–∫–∞, –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º React-Redux –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º.
---------------------------------------------------------------------------------------------  
