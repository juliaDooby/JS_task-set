---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
1. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å REST API (GET-–∑–∞–ø—Ä–æ—Å)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è GET-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π REST API –∏ –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–æ–ª—å.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function fetchData() {
  fetch('https://jsonplaceholder.typicode.com/posts')
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
}

fetchData();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `fetch` –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è GET-–∑–∞–ø—Ä–æ—Å–∞. –û—Ç–≤–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—Å—è –≤ JSON —Å –ø–æ–º–æ—â—å—é `.json()`, –∏ –∑–∞—Ç–µ–º –≤—ã–≤–æ–¥–∏—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
2. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å REST API (POST-–∑–∞–ø—Ä–æ—Å)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é POST-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π API.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sendData() {
  const data = {
    title: 'foo',
    body: 'bar',
    userId: 1
  };

  fetch('https://jsonplaceholder.typicode.com/posts', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(data)
  })
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('–û—à–∏–±–∫–∞:', error));
}

sendData();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON-–¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `POST`. –ó–∞–≥–æ–ª–æ–≤–æ–∫ `Content-Type` —Å–æ–æ–±—â–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä—É, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
3. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Maps API
‚åõ –ó–∞–¥–∞—á–∞: –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ Google Maps API –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –í—Å—Ç–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –≤ HTML –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Google Maps API:
```html
<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap" async defer></script>
```
2. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã:
```javascript
function initMap() {
  const map = new google.maps.Map(document.getElementById("map"), {
    center: { lat: -34.397, lng: 150.644 },
    zoom: 8
  });
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø–æ–¥–∫–ª—é—á–∞–µ–º Google Maps API —Å –ø–æ–º–æ—â—å—é —Ç–µ–≥–∞ `<script>`, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –≤ —Ñ—É–Ω–∫—Ü–∏–∏ `initMap()`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
4. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Firebase (–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è)
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é Firebase.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Firebase SDK:
```bash
npm install firebase
```
2. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º email –∏ –ø–∞—Ä–æ–ª—è:
```javascript
import firebase from 'firebase/app';
import 'firebase/auth';

const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_AUTH_DOMAIN",
  projectId: "YOUR_PROJECT_ID",
  storageBucket: "YOUR_STORAGE_BUCKET",
  messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
  appId: "YOUR_APP_ID"
};

firebase.initializeApp(firebaseConfig);

function signIn(email, password) {
  firebase.auth().signInWithEmailAndPassword(email, password)
    .then(userCredential => {
      console.log('User signed in:', userCredential.user);
    })
    .catch(error => {
      console.error('Error:', error.message);
    });
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º Firebase, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ `signInWithEmailAndPassword` –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
5. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Stripe (–ø–ª–∞—Ç–µ–∂–∏)
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Stripe.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Stripe SDK:
```bash
npm install @stripe/stripe-js
```
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `Stripe.js` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Ñ–æ—Ä–º—ã:
```javascript
import { loadStripe } from '@stripe/stripe-js';

let stripe;
let elements;

async function initializeStripe() {
  stripe = await loadStripe('YOUR_STRIPE_PUBLIC_KEY');
  elements = stripe.elements();
  const cardElement = elements.create('card');
  cardElement.mount('#card-element');
}

async function handlePayment() {
  const { token, error } = await stripe.createToken(elements.getElement('card'));
  if (error) {
    console.error('Payment error:', error);
  } else {
    console.log('Payment token:', token);
  }
}
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º Stripe –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–∞—Ä—Ç—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
6. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Twilio (–æ—Ç–ø—Ä–∞–≤–∫–∞ SMS)
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Twilio API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Twilio SDK:
```bash
npm install twilio
```
2. –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS:
```javascript
const twilio = require('twilio');

const client = new twilio('YOUR_ACCOUNT_SID', 'YOUR_AUTH_TOKEN');

function sendSMS(to, body) {
  client.messages.create({
    body: body,
    from: 'YOUR_TWILIO_PHONE_NUMBER',
    to: to
  })
  .then(message => console.log(message.sid))
  .catch(error => console.error(error));
}

sendSMS('+1234567890', 'Hello, this is a test message!');
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º Twilio –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS —á–µ—Ä–µ–∑ API. –î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –∞–∫–∫–∞—É–Ω—Ç –≤ Twilio –∏ –∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
7. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenWeather API (–ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ —á–µ—Ä–µ–∑ OpenWeather API.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function getWeather(city) {
  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=YOUR_API_KEY`)
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('Error:', error));
}

getWeather('London');
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º OpenWeather API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ó–∞–º–µ–Ω–∏—Ç–µ `YOUR_API_KEY` –Ω–∞ –≤–∞—à –∫–ª—é—á API.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
8. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å GraphQL API
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫ GraphQL API.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
const query = `
  query {
    posts {
      title
      body
    }
  }
`;

fetch('https://graphql.example.com', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ query: query })
})
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('Error:', error));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å GraphQL —Å –ø–æ–º–æ—â—å—é `fetch`, –æ—Ç–ø—Ä–∞–≤–ª—è—è —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ç–µ–ª–µ POST-–∑–∞–ø—Ä–æ—Å–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
9. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Redux –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Redux –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ React.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Redux –∏ React-Redux:
```bash
npm install redux react-redux
```
2. –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç:
```javascript
import { createStore } from 'redux';
import { Provider, useDispatch, useSelector } from 'react-redux';

// Reducer
function counterReducer(state = { count: 0 }, action) {
  switch (action.type) {
    case 'INCREMENT':
      return { count: state.count + 1 };
    case 'DECREMENT':
      return { count: state.count - 1 };
    default:
      return state;
  }
}

// Store
const store = createStore(counterReducer);

// Component
function Counter() {
  const dispatch = useDispatch();
  const count = useSelector(state => state.count);

  return (
    <div>
      <p>{count}</p>
      <button onClick={() => dispatch({ type: 'INCREMENT' })}>Increment</button>
      <button onClick={() => dispatch({ type: 'DECREMENT' })}>Decrement</button>
    </div>
  );
}

function App() {
  return (
    <Provider store={store}>
      <Counter />
    </Provider>
  );
}

export default App;
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã —Å–æ–∑–¥–∞—ë–º Redux store —Å –ø—Ä–æ—Å—Ç—ã–º —Ä–µ–¥—å—é—Å–µ—Ä–æ–º, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å—á—ë—Ç—á–∏–∫–∞, –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º React-Redux –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
10. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OAuth 2.0
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ Google OAuth 2.0.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ OAuth 2.0 –≤ –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ Google.
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É Google –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
```html
<script src="https://apis.google.com/js/platform.js" async defer></script>

<button id="google-sign-in">Sign in with Google</button>

<script>
  function onSignIn(googleUser) {
    const profile = googleUser.getBasicProfile();
    console.log('Name: ' + profile.getName());
  }

  gapi.load('auth2', function() {
    gapi.auth2.init().then(function () {
      const auth2 = gapi.auth2.getAuthInstance();
      auth2.attachClickHandler('google-sign-in', {}, onSignIn);
    });
  });
</script>
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Google OAuth 2.0 –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Google. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
11. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AWS S3 –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ S3 —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AWS SDK.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import AWS from 'aws-sdk';

AWS.config.update({
  accessKeyId: 'YOUR_ACCESS_KEY',
  secretAccessKey: 'YOUR_SECRET_KEY',
  region: 'us-east-1'
});

const s3 = new AWS.S3();

function uploadFile(file) {
  const params = {
    Bucket: 'your-bucket-name',
    Key: file.name,
    Body: file,
    ACL: 'public-read'
  };

  s3.upload(params, function(err, data) {
    if (err) {
      console.error('Error uploading file:', err);
    } else {
      console.log('File uploaded successfully:', data.Location);
    }
  });
}

uploadFile(fileInput.files[0]); // Example of uploading file from an input field
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –≠—Ç–æ—Ç –∫–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç AWS SDK –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ S3. –ú—ã –ø–µ—Ä–µ–¥–∞—ë–º —Ñ–∞–π–ª –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
12. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å MongoDB (—Å –ø–æ–º–æ—â—å—é Mongoose)
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ MongoDB –∏ Mongoose –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
üéØ –†–µ—à–µ–Ω–∏–µ:
```bash
npm install mongoose
```

```javascript
const mongoose = require('mongoose');

mongoose.connect('mongodb://localhost/test', { useNewUrlParser: true, useUnifiedTopology: true });

const Schema = mongoose.Schema;
const userSchema = new Schema({
  name: String,
  age: Number
});

const User = mongoose.model('User', userSchema);

const user = new User({ name: 'John', age: 30 });
user.save()
  .then(() => console.log('User saved'))
  .catch(err => console.error('Error:', err));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø–æ–¥–∫–ª—é—á–∞–µ–º Mongoose –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö MongoDB –∏ —Å–æ–∑–¥–∞—ë–º –º–æ–¥–µ–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
13. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Firebase Realtime Database
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Firebase Realtime Database.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
import firebase from 'firebase/app';
import 'firebase/database';

const firebaseConfig = {
  apiKey: 'YOUR_API_KEY',
  authDomain: 'YOUR_AUTH_DOMAIN',
  databaseURL: 'YOUR_DATABASE_URL',
  projectId: 'YOUR_PROJECT_ID',
};

firebase.initializeApp(firebaseConfig);

const database = firebase.database();

function writeData() {
  database.ref('users/1').set({
    name: 'John',
    age: 30
  });
}

writeData();
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –ø–æ–¥–∫–ª—é—á–∞–µ–º Firebase –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ Realtime Database –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
14. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Socket.io –¥–ª—è WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ WebSocket —Å —Å–µ—Ä–≤–µ—Ä–æ–º —á–µ—Ä–µ–∑ Socket.io.
üéØ –†–µ—à–µ–Ω–∏–µ:
```bash
npm install socket.io-client
```

```javascript
import io from 'socket.io-client';

const socket = io('http://localhost:3000');

socket.on('message', (data) => {
  console.log('Received message:', data);
});

socket.emit('sendMessage', 'Hello, Server!');
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `socket.io-client` –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –æ–±–º–µ–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –º–µ–∂–¥—É –∫–ª–∏–µ–Ω—Ç–æ–º –∏ —Å–µ—Ä–≤–µ—Ä–æ–º.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
15. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Contentful –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
‚åõ –ó–∞–¥–∞—á–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Contentful API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
const client = contentful.createClient({
  space: 'YOUR_SPACE_ID',
  accessToken: 'YOUR_ACCESS_TOKEN'
});

client.getEntries()
  .then(entries => console.log(entries.items))
  .catch(err => console.log(err));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º Contentful API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ CMS.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
16. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Algolia –¥–ª—è –ø–æ–∏—Å–∫–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–∏—Å–∫–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Å –ø–æ–º–æ—â—å—é Algolia.
üéØ –†–µ—à–µ–Ω–∏–µ:
```bash
npm install algoliasearch
```

```javascript
import algoliasearch from 'algoliasearch';

const client = algoliasearch('YOUR_APPLICATION_ID', 'YOUR_SEARCH_ONLY_API_KEY');
const index = client.initIndex('your_index_name');

index.search('query')
  .then(({ hits }) => {
    console.log(hits);
  })
  .catch(err => console.log(err));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º Algolia –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:
---
17. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å HubSpot (CRM)
‚åõ –ó–∞–¥–∞—á–∞: –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ HubSpot API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
const apiUrl = 'https://api.hubapi.com/contacts/v1/lists/all/contacts/all';
const apiKey = 'YOUR_API_KEY';

fetch(`${apiUrl}?hapikey=${apiKey}`)
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('Error:', error));
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º HubSpot API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ CRM.
---------------------------------------------------------------------------------------------  
