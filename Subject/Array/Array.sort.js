---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
1. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortAscending(arr) {
  return arr.sort((a, b) => a - b);
}

const numbers = [10, 5, 8, 1, 3];
console.log(sortAscending(numbers)); // [1, 3, 5, 8, 10]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ `sort()` –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞.
- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é, –ø–æ—ç—Ç–æ–º—É –º—ã –ø–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è `(a, b) => a - b`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
2. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –ø–æ –¥–ª–∏–Ω–µ
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –ø–æ –∏—Ö –¥–ª–∏–Ω–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortByLength(arr) {
  return arr.sort((a, b) => a.length - b.length);
}

const strings = ['apple', 'banana', 'cherry', 'kiwi'];
console.log(sortByLength(strings)); // ['kiwi', 'apple', 'banana', 'cherry']
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `sort()` —Å —Ñ—É–Ω–∫—Ü–∏–µ–π —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ –¥–ª–∏–Ω–µ —Å—Ç—Ä–æ–∫.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
3. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –ø–æ —É–±—ã–≤–∞–Ω–∏—é.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortDescending(arr) {
  return arr.sort((a, b) => b - a);
}

const numbers = [10, 5, 8, 1, 3];
console.log(sortDescending(numbers)); // [10, 8, 5, 3, 1]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ a –∏ b –≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –ø–æ —É–±—ã–≤–∞–Ω–∏—é.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
4. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ–ª—è
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortByField(arr, field) {
  return arr.sort((a, b) => a[field] - b[field]);
}

const users = [{ name: 'Alice', age: 25 }, { name: 'Bob', age: 30 }, { name: 'Charlie', age: 20 }];
console.log(sortByField(users, 'age')); // [{ name: 'Charlie', age: 20 }, { name: 'Alice', age: 25 }, { name: 'Bob', age: 30 }]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç—ã –ø–æ –ø–æ–ª—é age.
- –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ `sort()`, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è –æ–±—ä–µ–∫—Ç–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
5. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É –ø–æ–ª—é.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortByStringField(arr, field) {
  return arr.sort((a, b) => a[field].localeCompare(b[field]));
}

const users = [{ name: 'Alice' }, { name: 'Bob' }, { name: 'Charlie' }];
console.log(sortByStringField(users, 'name')); // [{ name: 'Alice' }, { name: 'Bob' }, { name: 'Charlie' }]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –î–ª—è —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ `localeCompare()`, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ —Å —É—á—ë—Ç–æ–º –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
6. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortByMultipleFields(arr) {
  return arr.sort((a, b) => {
    if (a.age === b.age) {
      return a.name.localeCompare(b.name);
    }
    return a.age - b.age;
  });
}

const users = [
  { name: 'Alice', age: 25 },
  { name: 'Bob', age: 30 },
  { name: 'Charlie', age: 25 }
];
console.log(sortByMultipleFields(users));
// [{ name: 'Alice', age: 25 }, { name: 'Charlie', age: 25 }, { name: 'Bob', age: 30 }]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã —Å–æ—Ä—Ç–∏—Ä—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –ø–æ age, –∞ –µ—Å–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π, —Ç–æ –ø–æ –∏–º–µ–Ω–∏.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
7. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `sort()` –∏ `reverse()`
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, –∞ –∑–∞—Ç–µ–º –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –µ–≥–æ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortAndReverse(arr) {
  return arr.sort((a, b) => a - b).reverse();
}

const numbers = [10, 5, 8, 1, 3];
console.log(sortAndReverse(numbers)); // [10, 8, 5, 3, 1]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, –∞ –∑–∞—Ç–µ–º –ø—Ä–∏–º–µ–Ω—è–µ–º `reverse()` –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –º–∞—Å—Å–∏–≤–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
8. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª —Å —É—á–µ—Ç–æ–º NaN
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, —É—á–∏—Ç—ã–≤–∞—è –Ω–∞–ª–∏—á–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è **`NaN`**.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortWithNaN(arr) {
  return arr.sort((a, b) => {
    if (isNaN(a) && !isNaN(b)) return 1;
    if (!isNaN(a) && isNaN(b)) return -1;
    return a - b;
  });
}

const numbers = [10, NaN, 5, 8, NaN, 1];
console.log(sortWithNaN(numbers)); // [1, 5, 8, 10, NaN, NaN]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –í —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç–ª–µ–º–µ–Ω—Ç `NaN` –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
9. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortAlphabetically(arr) {
  return arr.sort();
}

const words = ['banana', 'apple', 'cherry'];
console.log(sortAlphabetically(words)); // ['apple', 'banana', 'cherry']
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú–µ—Ç–æ–¥ `sort()` –¥–ª—è —Å—Ç—Ä–æ–∫ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Ö –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
10. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function customSort(arr) {
  return arr.sort((a, b) => b.age - a.age);
}

const users = [{ name: 'Alice', age: 25 }, { name: 'Bob', age: 30 }, { name: 'Charlie', age: 20 }];
console.log(customSort(users)); // [{ name: 'Bob', age: 30 }, { name: 'Alice', age: 25 }, { name: 'Charlie', age: 20 }]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã —Å–æ–∑–¥–∞–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ age –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
11. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ø—É–∑—ã—Ä—å–∫–æ–≤–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø—É–∑—ã—Ä—å–∫–æ–≤—É—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function bubbleSort(arr) {
  const n = arr.length;
  for (let i = 0; i < n; i++) {
    for (let j = 0; j < n - i - 1; j++) {
      if (arr[j] > arr[j + 1]) {
        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]]; // –æ–±–º–µ–Ω
      }
    }
  }
  return arr;
}

const numbers = [5, 2, 9, 1, 5, 6];
console.log(bubbleSort(numbers)); // [1, 2, 5, 5, 6, 9]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ü—É–∑—ã—Ä—å–∫–æ–≤–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –º–µ–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ—Å—Ç–∞–º–∏, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
12. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤—Å—Ç–∞–≤–∫–∞–º–∏
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤—Å—Ç–∞–≤–∫–∞–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function insertionSort(arr) {
  for (let i = 1; i < arr.length; i++) {
    let current = arr[i];
    let j = i - 1;
    while (j >= 0 && arr[j] > current) {
      arr[j + 1] = arr[j];
      j--;
    }
    arr[j + 1] = current;
  }
  return arr;
}

const numbers = [5, 2, 9, 1, 5, 6];
console.log(insertionSort(numbers)); // [1, 2, 5, 5, 6, 9]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –∏ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —á–∞—Å—Ç—å –º–∞—Å—Å–∏–≤–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
13. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤—ã–±–æ—Ä–æ–º
‚åõ –ó–∞–¥–∞—á–∞: –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤—ã–±–æ—Ä–æ–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function selectionSort(arr) {
  const n = arr.length;
  for (let i = 0; i < n - 1; i++) {
    let minIndex = i;
    for (let j = i + 1; j < n; j++) {
      if (arr[j] < arr[minIndex]) {
        minIndex = j;
      }
    }
    [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]]; // –æ–±–º–µ–Ω
  }
  return arr;
}

const numbers = [5, 2, 9, 1, 5, 6];
console.log(selectionSort(numbers)); // [1, 2, 5, 5, 6, 9]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –Ω–∞—Ö–æ–¥–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—Å—Ç–∞–≤—à–µ–π—Å—è —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –∏ –º–µ–Ω—è–µ–º –µ–≥–æ –º–µ—Å—Ç–∞–º–∏ —Å –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –Ω–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
14. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª —Å –Ω—É–ª—è
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤, –ø–µ—Ä–µ–º–µ—â–∞—è –≤—Å–µ –Ω—É–ª–∏ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function moveZerosToEnd(arr) {
  const nonZeros = arr.filter(num => num !== 0);
  const zeros = arr.length - nonZeros.length;
  return [...nonZeros, ...Array(zeros).fill(0)];
}

const numbers = [0, 1, 0, 3, 12];
console.log(moveZerosToEnd(numbers)); // [1, 3, 12, 0, 0]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –°–Ω–∞—á–∞–ª–∞ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –≤—Å–µ –Ω—É–ª–∏ —Å –ø–æ–º–æ—â—å—é `filter`, –∑–∞—Ç–µ–º –∑–∞–ø–æ–ª–Ω—è–µ–º –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –Ω—É–ª—è–º–∏.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
15. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –ø–æ –¥–∞—Ç–∞–º
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ –¥–∞—Ç–∞–º.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortByDate(arr) {
  return arr.sort((a, b) => new Date(a.date) - new Date(b.date));
}

const events = [
  { name: 'Event 1', date: '2022-01-01' },
  { name: 'Event 2', date: '2023-01-01' },
  { name: 'Event 3', date: '2021-01-01' }
];

console.log(sortByDate(events)); // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞—Ç—ã, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –≤ –æ–±—ä–µ–∫—Ç `Date`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
16. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ —Å –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ä–µ–≥–∏—Å—Ç—Ä.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortIgnoringCase(arr) {
  return arr.sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()));
}

const words = ['Banana', 'apple', 'cherry', 'date'];
console.log(sortIgnoringCase(words)); // ['apple', 'Banana', 'cherry', 'date']
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –ø—Ä–∏–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫–∏ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –ø–µ—Ä–µ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º —Å –ø–æ–º–æ—â—å—é `toLowerCase()`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:
---
17. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –ø–æ —á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º —Å —É—á—ë—Ç–æ–º –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö
‚åõ –ó–∞–¥–∞—á–∞: –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —á–∏—Å–ª–∞ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏ —Ç–æ—á–∫–∞–º–∏.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function sortByDecimal(arr) {
  return arr.sort((a, b) => parseFloat(a) - parseFloat(b));
}

const numbers = ['10.5', '2.1', '5.7', '3.3'];
console.log(sortByDecimal(numbers)); // ['2.1', '3.3', '5.7', '10.5']
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `parseFloat()` –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫ –≤ —á–∏—Å–ª–∞ –ø–µ—Ä–µ–¥ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π.
---------------------------------------------------------------------------------------------  
