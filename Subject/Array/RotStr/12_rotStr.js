---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ó–∞–¥–∞—á–∞:  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π (—á–∏—Å—Ç–æ —Ä–∞–¥–∏ —Ñ–∞–Ω–∞)
---
–£—Å–ª–æ–≤–∏–µ:
12. ‚åõ –ó–∞–¥–∞—á–∞: –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–æ–º –¥—Ä—É–≥–æ–π —Å —É—á—ë—Ç–æ–º –æ—à–∏–±–æ–∫.
–£—Å–ª–æ–≤–∏–µ:  
–ü—Ä–æ–≤–µ—Ä—å, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å `s2` –∏–∑ `s1` –ø–æ–≤–æ—Ä–æ—Ç–æ–º –∏ –º–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ–π –∑–∞–º–µ–Ω–æ–π —Å–∏–º–≤–æ–ª–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```js
function isRotatedOneMismatch(s1, s2) {
  if (s1.length !== s2.length) return false;
  const doubled = s1 + s1;
  for (let i = 0; i < s1.length; i++) {
    const rotated = doubled.slice(i, i + s1.length);
    let mismatches = 0;
    for (let j = 0; j < s1.length; j++) {
      if (rotated[j] !== s2[j]) mismatches++;
      if (mismatches > 1) break;
    }
    if (mismatches <= 1) return true;
  }
  return false;
}
```
–ü—Ä–∏–º–µ—Ä:  
`isRotatedOneMismatch("abcdef", "defabz")` ‚Üí `true`
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–∫—É ‚Äî –Ω–µ —Å–∞–º—ã–π –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–ø–æ—Å–æ–±.
---------------------------------------------------------------------------------------------  
