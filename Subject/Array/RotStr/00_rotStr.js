
### üîπ **–ó–∞–¥–∞—á–∞ 1: –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ `s2` –ø–æ–≤—ë—Ä–Ω—É—Ç–æ–π –≤–µ—Ä—Å–∏–µ–π —Å—Ç—Ä–æ–∫–∏ `s1`.

```js
function isRotated(s1, s2) {
  if (s1.length !== s2.length) return false;
  return (s1 + s1).includes(s2);
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ `s2` ‚Äî –ø–æ–≤—ë—Ä–Ω—É—Ç–∞—è –≤–µ—Ä—Å–∏—è `s1`, —Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π `s1 + s1`.  
–ù–∞–ø—Ä–∏–º–µ—Ä: `"abcde"` + `"abcde"` ‚Üí `"abcdeabcde"` —Å–æ–¥–µ—Ä–∂–∏—Ç `"deabc"`.

---

### üîπ **–ó–∞–¥–∞—á–∞ 2: –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä**

**–£—Å–ª–æ–≤–∏–µ:**  
–¢–∞ –∂–µ –∑–∞–¥–∞—á–∞, –Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä —Å–∏–º–≤–æ–ª–æ–≤.

```js
function isRotatedIgnoreCase(s1, s2) {
  if (s1.length !== s2.length) return false;
  return (s1.toLowerCase() + s1.toLowerCase()).includes(s2.toLowerCase());
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–ü–µ—Ä–µ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º –≤—Å—ë –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.

---

### üîπ **–ó–∞–¥–∞—á–∞ 3: –° —É—á—ë—Ç–æ–º –ø—Ä–æ–±–µ–ª–æ–≤**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–±–µ–ª—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –∑–Ω–∞—á–∏–º—ã–º–∏. `"abc "` –∏ `" cab"` ‚Äî –Ω–µ —Ä–æ—Ç–∞—Ü–∏—è.

```js
function isRotatedStrict(s1, s2) {
  if (s1.length !== s2.length) return false;
  return (s1 + s1).includes(s2);
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–¢–∞ –∂–µ –ª–æ–≥–∏–∫–∞ ‚Äî –≤–∞–∂–Ω–æ, —á—Ç–æ –ø—Ä–æ–±–µ–ª—ã –æ—Å—Ç–∞—é—Ç—Å—è.

---

### üîπ **–ó–∞–¥–∞—á–∞ 4: –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–µ–ª—ã –ø–µ—Ä–µ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º**

**–£—Å–ª–æ–≤–∏–µ:**  
–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏, –Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–±–µ–ª—ã.

```js
function isRotatedNoSpaces(s1, s2) {
  s1 = s1.replace(/\s/g, '');
  s2 = s2.replace(/\s/g, '');
  if (s1.length !== s2.length) return false;
  return (s1 + s1).includes(s2);
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
`replace(/\s/g, '')` —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã –ø–µ—Ä–µ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º.

---

### üîπ **–ó–∞–¥–∞—á–∞ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ includes()**

**–£—Å–ª–æ–≤–∏–µ:**  
–†–µ–∞–ª–∏–∑—É–π –ø—Ä–æ–≤–µ—Ä–∫—É –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è `includes()`.

```js
function isRotatedManual(s1, s2) {
  if (s1.length !== s2.length) return false;
  const doubled = s1 + s1;
  for (let i = 0; i <= doubled.length - s2.length; i++) {
    if (doubled.slice(i, i + s2.length) === s2) return true;
  }
  return false;
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ `slice()`.

---

### üîπ **–ó–∞–¥–∞—á–∞ 6: –£—á–∏—Ç—ã–≤–∞—Ç—å Unicode —Å–∏–º–≤–æ–ª—ã**

```js
function isRotatedUnicode(s1, s2) {
  if ([...s1].length !== [...s2].length) return false;
  return ([...s1, ...s1].join('')).includes([...s2].join(''));
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –º–∞—Å—Å–∏–≤—ã —Å–∏–º–≤–æ–ª–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Unicode (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç–º–æ–¥–∑–∏).

---

### üîπ **–ó–∞–¥–∞—á–∞ 7: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –∏ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤**

```js
function isRotatedMultiLang(s1, s2) {
  return isRotatedUnicode(s1, s2);
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π.

---

### üîπ **–ó–∞–¥–∞—á–∞ 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–≤–æ—Ä–æ—Ç–æ–≤**

**–£—Å–ª–æ–≤–∏–µ:**  
–í–µ—Ä–Ω–∏ `true`, –µ—Å–ª–∏ `s2` —Ä–∞–≤–Ω–∞ **–ª—é–±–æ–º—É** —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–º—É —Å–¥–≤–∏–≥—É `s1`.

```js
function isAnyRotation(s1, s2) {
  if (s1.length !== s2.length) return false;
  for (let i = 0; i < s1.length; i++) {
    const rotated = s1.slice(i) + s1.slice(0, i);
    if (rotated === s2) return true;
  }
  return false;
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ —Å–¥–≤–∏–≥–∏ –≤—Ä—É—á–Ω—É—é.

---

### üîπ **–ó–∞–¥–∞—á–∞ 9: –í–µ—Ä–Ω—É—Ç—å –∏–Ω–¥–µ–∫—Å –ø–æ–≤–æ—Ä–æ—Ç–∞**

**–£—Å–ª–æ–≤–∏–µ:**  
–ï—Å–ª–∏ `s2` ‚Äî –ø–æ–≤–æ—Ä–æ—Ç `s1`, –≤–µ—Ä–Ω–∏ –∏–Ω–¥–µ–∫—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–≤–æ—Ä–æ—Ç.

```js
function getRotationIndex(s1, s2) {
  if (s1.length !== s2.length) return -1;
  const doubled = s1 + s1;
  return doubled.indexOf(s2);
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–ò–Ω–¥–µ–∫—Å –ø–æ—è–≤–ª–µ–Ω–∏—è `s2` –≤ `s1 + s1` ‚Äî –∏ –µ—Å—Ç—å —Ç–æ—á–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞. –ï—Å–ª–∏ `-1`, –∑–Ω–∞—á–∏—Ç –Ω–µ —Ä–æ—Ç–∞—Ü–∏—è.

---

### üîπ **–ó–∞–¥–∞—á–∞ 10: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π (—á–∏—Å—Ç–æ —Ä–∞–¥–∏ —Ñ–∞–Ω–∞)**

```js
function isRotatedRegex(s1, s2) {
  if (s1.length !== s2.length) return false;
  const regex = new RegExp(s2);
  return regex.test(s1 + s1);
}
```

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**  
–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–∫—É ‚Äî –Ω–µ —Å–∞–º—ã–π –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–ø–æ—Å–æ–±.

–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π —É—Å–ª–æ–∂–Ω–∏–º! –í–æ—Ç **5 –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞—Ü–∏–π –∑–∞–¥–∞—á –Ω–∞ —Ç–µ–º—É –ø–æ–≤–æ—Ä–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏**, —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏ —Ä–µ—à–µ–Ω–∏—è–º–∏ –Ω–∞ JavaScript.

---

### üî∏ **1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –ø–æ–≤–æ—Ä–æ—Ç–æ–≤**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä—å, –º–æ–∂–µ—Ç –ª–∏ `s2` –ø–æ–ª—É—á–∏—Ç—å—Å—è –∏–∑ `s1` –º–∞–∫—Å–∏–º—É–º –∑–∞ `k` —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –ø–æ–≤–æ—Ä–æ—Ç–æ–≤.

```js
function isKRotated(s1, s2, k) {
  if (s1.length !== s2.length) return false;
  for (let i = 1; i <= k; i++) {
    const rotated = s1.slice(i) + s1.slice(0, i);
    if (rotated === s2) return true;
  }
  return false;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`isKRotated("abcdef", "defabc", 3)` ‚Üí `false`,  
`isKRotated("abcdef", "bcdefa", 1)` ‚Üí `true`

---

### üî∏ **2. –ù–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤–æ—Ä–æ—Ç–æ–≤ –¥–ª—è —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è**

**–£—Å–ª–æ–≤–∏–µ:**  
–í–µ—Ä–Ω–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–≤–æ—Ä–æ—Ç–æ–≤, —á—Ç–æ–±—ã `s1` —Å—Ç–∞–ª —Ä–∞–≤–µ–Ω `s2`, –∏–ª–∏ `-1`, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.

```js
function minRotations(s1, s2) {
  if (s1.length !== s2.length) return -1;
  for (let i = 0; i < s1.length; i++) {
    const rotated = s1.slice(i) + s1.slice(0, i);
    if (rotated === s2) return i;
  }
  return -1;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`minRotations("abcdef", "defabc")` ‚Üí `3`

---

### üî∏ **3. –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–æ–º –¥—Ä—É–≥–æ–π —Å —É—á—ë—Ç–æ–º –æ—à–∏–±–æ–∫**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä—å, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å `s2` –∏–∑ `s1` –ø–æ–≤–æ—Ä–æ—Ç–æ–º –∏ –º–∞–∫—Å–∏–º—É–º –æ–¥–Ω–æ–π –∑–∞–º–µ–Ω–æ–π —Å–∏–º–≤–æ–ª–∞.

```js
function isRotatedOneMismatch(s1, s2) {
  if (s1.length !== s2.length) return false;
  const doubled = s1 + s1;
  for (let i = 0; i < s1.length; i++) {
    const rotated = doubled.slice(i, i + s1.length);
    let mismatches = 0;
    for (let j = 0; j < s1.length; j++) {
      if (rotated[j] !== s2[j]) mismatches++;
      if (mismatches > 1) break;
    }
    if (mismatches <= 1) return true;
  }
  return false;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`isRotatedOneMismatch("abcdef", "defabz")` ‚Üí `true`

---

### üî∏ **4. –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–æ–º –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ `s` –ø–æ–≤—ë—Ä–Ω—É—Ç—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞.

```js
function isRotationOfPalindrome(s) {
  const doubled = s + s;
  for (let i = 0; i < s.length; i++) {
    const rotated = doubled.slice(i, i + s.length);
    if (rotated === [...rotated].reverse().join('')) return true;
  }
  return false;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`isRotationOfPalindrome("aab")` ‚Üí `true` (—Ç.–∫. "aba" ‚Äî –ø–∞–ª–∏–Ω–¥—Ä–æ–º –∏ "aab" ‚Äî –µ–≥–æ –ø–æ–≤–æ—Ä–æ—Ç)

---

### üî∏ **5. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö —Å—Ç—Ä–æ–∫ –Ω–∞ –ø–æ–≤–æ—Ä–æ—Ç –ø–æ —Å–ª–æ–≤–∞–º**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä—å, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∏–∑ –¥—Ä—É–≥–æ–π, —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—è **—Å–ª–æ–≤–∞**, –∞ –Ω–µ —Å–∏–º–≤–æ–ª—ã.

```js
function isWordRotation(s1, s2) {
  const arr1 = s1.trim().split(/\s+/);
  const arr2 = s2.trim().split(/\s+/);
  if (arr1.length !== arr2.length) return false;
  const joined = arr1.concat(arr1).join(' ');
  return joined.includes(arr2.join(' '));
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`isWordRotation("one two three", "three one two")` ‚Üí `true`

–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –µ—â—ë **5 –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –∑–∞–¥–∞—á –Ω–∞ —Ç–µ–º—É –ø–æ–≤–æ—Ä–æ—Ç–∞ —Å—Ç—Ä–æ–∫–∏**, –∫–∞–∂–¥–∞—è —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –∏ —Ä–µ—à–µ–Ω–∏–µ–º –Ω–∞ JavaScript.

---

### üîπ **6. –Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–º —Å–¥–≤–∏–≥–æ–º –¥—Ä—É–≥–æ–π (–ø–æ —Å–∏–º–≤–æ–ª—å–Ω—ã–º –∏–Ω–¥–µ–∫—Å–∞–º)**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä—å, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å `s2` –∏–∑ `s1`, —Å–¥–≤–∏–≥–∞—è –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤–ø—Ä–∞–≤–æ —Ä–æ–≤–Ω–æ –Ω–∞ 1 (–ø–æ –º–æ–¥—É–ª—é –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏).

```js
function isOneStepRotation(s1, s2) {
  if (s1.length !== s2.length) return false;
  const rotated = s1[s1.length - 1] + s1.slice(0, s1.length - 1);
  return rotated === s2;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`isOneStepRotation("abcde", "eabcd")` ‚Üí `true`

---

### üîπ **7. –ù–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–π —Å—Ç—Ä–æ–∫–∏**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü–æ—Å—á–∏—Ç–∞–π, —Å–∫–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–æ—Ç–∞—Ü–∏–π —Å—Ç—Ä–æ–∫–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.

```js
function countUniqueRotations(s) {
  const set = new Set();
  for (let i = 0; i < s.length; i++) {
    const rotated = s.slice(i) + s.slice(0, i);
    set.add(rotated);
  }
  return set.size;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`countUniqueRotations("aaaa")` ‚Üí `1`  
`countUniqueRotations("abcd")` ‚Üí `4`

---

### üîπ **8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ —Å "–∑–∞–ª–∏–ø–∞–Ω–∏–µ–º" —Å–∏–º–≤–æ–ª–æ–≤**

**–£—Å–ª–æ–≤–∏–µ:**  
–ü—Ä–æ–≤–µ—Ä—å, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å `s2` –∏–∑ `s1`, –µ—Å–ª–∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –ø–æ–≤–æ—Ä–æ—Ç–µ "–∑–∞–ª–∏–ø–∞–µ—Ç" –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª (—É–¥–∞–ª—è–µ—Ç—Å—è).

```js
function isStickyRotation(s1, s2) {
  while (s1.length > 0) {
    s1 = s1.slice(1) + s1[0]; // rotate
    s1 = s1.slice(0, -1);     // drop last
    if (s1 === s2) return true;
  }
  return false;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`isStickyRotation("abcd", "cab")` ‚Üí `true`  
(`abcd` ‚Üí `bcda` ‚Üí remove last ‚Üí `bcd`, next: `cdb`, remove `b` ‚Üí `cd`, ‚Ä¶)

---

### üîπ **9. –ü—Ä–æ–≤–µ—Ä–∫–∞ "–¥–≤–æ–π–Ω–æ–≥–æ" –ø–æ–≤–æ—Ä–æ—Ç–∞**

**–£—Å–ª–æ–≤–∏–µ:**  
–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å `s2` –∏–∑ `s1`, –≤—ã–ø–æ–ª–Ω–∏–≤ –ø–æ–≤–æ—Ä–æ—Ç **–¥–≤–∞–∂–¥—ã** –≤ –ª—é–±–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏?

```js
function isDoubleRotation(s1, s2) {
  if (s1.length !== s2.length) return false;
  const len = s1.length;
  for (let i = 0; i < len; i++) {
    const first = s1.slice(i) + s1.slice(0, i);
    for (let j = 0; j < len; j++) {
      const second = first.slice(j) + first.slice(0, j);
      if (second === s2) return true;
    }
  }
  return false;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`isDoubleRotation("abcd", "cdab")` ‚Üí `true` (`abcd` ‚Üí `bcda` ‚Üí `cdab`)

---

### üîπ **10. –ù–∞–π—Ç–∏ "–Ω–∞–∏–ª—É—á—à—É—é" —Ä–æ—Ç–∞—Ü–∏—é –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É**

**–£—Å–ª–æ–≤–∏–µ:**  
–í–µ—Ä–Ω–∏ —Ä–æ—Ç–∞—Ü–∏—é —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ –Ω–∞–∏–º–µ–Ω—å—à–µ–π.

```js
function bestRotationLex(s) {
  let best = s;
  for (let i = 1; i < s.length; i++) {
    const rotated = s.slice(i) + s.slice(0, i);
    if (rotated < best) best = rotated;
  }
  return best;
}
```

**–ü—Ä–∏–º–µ—Ä:**  
`bestRotationLex("bca")` ‚Üí `"abc"`
