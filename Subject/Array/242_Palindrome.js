---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–∞–ª–∏–Ω–¥—Ä–æ–º:
---
–ü–∞–ª–∏–Ω–¥—Ä–æ–º ‚Äî —ç—Ç–æ —Å–ª–æ–≤–æ, —Ñ—Ä–∞–∑–∞, —á–∏—Å–ª–æ –∏–ª–∏ –¥—Ä—É–≥–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä–∞—è —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ –≤ –æ–±–æ–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö (—Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ), –∏–≥–Ω–æ—Ä–∏—Ä—É—è –ø—Ä–æ–±–µ–ª—ã, –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤.
‚åõ –ó–∞–¥–∞—á–∞: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞ –Ω–∞ JavaScript
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã.
üéØ –†–µ—à–µ–Ω–∏–µ 1: –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `split()`, `reverse()` –∏ `join()`
1. –ú—ã —É–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–∞–ª—Ñ–∞–≤–∏—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –ø—Ä–∏–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –∫ –æ–¥–Ω–æ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É.
2. –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –µ—ë —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π.
```javascript
function isPalindrome(str) {
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
  const cleanedStr = str.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();

  // –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º
  const reversedStr = cleanedStr.split('').reverse().join('');

  return cleanedStr === reversedStr;
}

console.log(isPalindrome("A man, a plan, a canal, Panama")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ `[^a-zA-Z0-9]`, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –Ω–µ —è–≤–ª—è—é—â–∏–µ—Å—è –±—É–∫–≤–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏.
- –ü—Ä–∏–≤–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É —Å –ø–æ–º–æ—â—å—é `toLowerCase()`.
- –° –ø–æ–º–æ—â—å—é `split('')` –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤, –∑–∞—Ç–µ–º `reverse()` –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤, –∏ `join('')` —Å–Ω–æ–≤–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É.
- –ï—Å–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∏ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–∞—è —Å—Ç—Ä–æ–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã, –∑–Ω–∞—á–∏—Ç, —ç—Ç–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–∞–ª–∏–Ω–¥—Ä–æ–º:
---
üéØ –†–µ—à–µ–Ω–∏–µ 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ü–∏–∫–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞
–ï—Å–ª–∏ –º—ã –Ω–µ —Ö–æ—Ç–∏–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ `split()`, `reverse()`, `join()`, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω —Å—Ç—Ä–æ–∫–∏.
```javascript
function isPalindrome(str) {
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
  const cleanedStr = str.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();

  let left = 0;
  let right = cleanedStr.length - 1;

  // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω
  while (left < right) {
    if (cleanedStr[left] !== cleanedStr[right]) {
      return false;
    }
    left++;
    right--;
  }

  return true;
}

console.log(isPalindrome("A man, a plan, a canal, Panama")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º —Å –¥–≤—É—Ö —É–∫–∞–∑–∞—Ç–µ–ª–µ–π: –æ–¥–∏–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏, –¥—Ä—É–≥–æ–π ‚Äî –Ω–∞ –∫–æ–Ω–µ—Ü.
- –í —Ü–∏–∫–ª–µ –º—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–∑–∏—Ü–∏—è—Ö. –ï—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, —Ç–æ —Å—Ç—Ä–æ–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
- –ï—Å–ª–∏ –º—ã –ø—Ä–æ—à–ª–∏ –≤—Å—é —Å—Ç—Ä–æ–∫—É –∏ —Å–∏–º–≤–æ–ª—ã —Å –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω —Å–æ–≤–ø–∞–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `true`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–∞–ª–∏–Ω–¥—Ä–æ–º:
---
üéØ –†–µ—à–µ–Ω–∏–µ 3: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `every()` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞
–ú–µ—Ç–æ–¥ `every()` –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —É—Å–ª–æ–≤–∏—é. –ú—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞.
```javascript
function isPalindrome(str) {
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
  const cleanedStr = str.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();

  return [...cleanedStr].every((char, i) => char === cleanedStr[cleanedStr.length - 1 - i]);
}

console.log(isPalindrome("A man, a plan, a canal, Panama")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è (`...`).
- –ú–µ—Ç–æ–¥ `every()` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª —Å –ø–æ–∑–∏—Ü–∏–∏ `i` —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Å–∏–º–≤–æ–ª–æ–º –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç –ü–∞–ª–∏–Ω–¥—Ä–æ–º:
---
üéØ –†–µ—à–µ–Ω–∏–µ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞ —Å –ø–æ–º–æ—â—å—é —Å—Ç–µ–∫–∞
–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö —Å—Ç–µ–∫, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
```javascript
function isPalindrome(str) {
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫—Ä–æ–º–µ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
  const cleanedStr = str.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();

  const stack = [];

  // –ü–æ–º–µ—â–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç–µ–∫
  for (let i = 0; i < cleanedStr.length; i++) {
    stack.push(cleanedStr[i]);
  }

  // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å—Ç–µ–∫–∞
  for (let i = 0; i < cleanedStr.length; i++) {
    if (cleanedStr[i] !== stack.pop()) {
      return false;
    }
  }

  return true;
}

console.log(isPalindrome("A man, a plan, a canal, Panama")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –ø–æ–º–µ—â–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç–µ–∫.
- –°—Ç–µ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É LIFO (–ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–∏—à—ë–ª ‚Äî –ø–µ—Ä–≤—ã–π —É—à—ë–ª), –ø–æ—ç—Ç–æ–º—É –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ —Å—Ç–µ–∫–∞ –º—ã –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏—Ö —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏.
–†–µ–∑—é–º–µ:
1. –ú–µ—Ç–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `reverse()`:
   - –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –ø–∞–º—è—Ç–∏, —Ç–∞–∫ –∫–∞–∫ —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–µ –º–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏.
   - –†–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n) –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ O(n) –ø–æ –ø–∞–º—è—Ç–∏.
2. –ú–µ—Ç–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü–∏–∫–ª–∞:
   - –≠–∫–æ–Ω–æ–º–∏—á–µ–Ω –ø–æ –ø–∞–º—è—Ç–∏, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö.
   - –†–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n) –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ O(1) –ø–æ –ø–∞–º—è—Ç–∏.
3. –ú–µ—Ç–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `every()`:
   - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª—å —Ä–µ—à–µ–Ω–∏—è, —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n) –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ O(n) –ø–æ –ø–∞–º—è—Ç–∏.
4. –ú–µ—Ç–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç–µ–∫–∞:
   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–µ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫–∏.
   - –†–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n) –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ O(n) –ø–æ –ø–∞–º—è—Ç–∏.
–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–¥–∞—á–∏, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–µ –≤—Å–µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–∞–º—è—Ç–∏.
---------------------------------------------------------------------------------------------  
