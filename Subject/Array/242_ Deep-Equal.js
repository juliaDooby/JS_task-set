---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: Deep Equal:
---
Deep Equal (–≥–ª—É–±–æ–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ) ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –æ–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–º–∏. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (`===`), –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤, –≥–ª—É–±–æ–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–æ–≤.
‚åõ –ó–∞–¥–∞—á–∞: –°—Ä–∞–≤–Ω–∏—Ç—å –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ (–∏–ª–∏ –º–∞—Å—Å–∏–≤—ã) –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –æ–Ω–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–º–∏, –≤–∫–ª—é—á–∞—è –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞.
---
üéØ –†–µ—à–µ–Ω–∏–µ 1: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–∫—É—Ä—Å–∏–∏
–ö–æ–¥:
```javascript
function deepEqual(obj1, obj2) {
  // –ï—Å–ª–∏ –æ–±–µ —Å—Å—ã–ª–∫–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ, –æ–±—ä–µ–∫—Ç—ã —Ä–∞–≤–Ω—ã
  if (obj1 === obj2) return true;

  // –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö null –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º, –æ–Ω–∏ –Ω–µ —Ä–∞–≤–Ω—ã
  if (obj1 == null || typeof obj1 !== 'object' || obj2 == null || typeof obj2 !== 'object') {
    return false;
  }

  // –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤—ã –∫–ª—é—á–µ–π –æ–±–æ–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤
  const keys1 = Object.keys(obj1);
  const keys2 = Object.keys(obj2);

  // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –æ–±—ä–µ–∫—Ç—ã –Ω–µ —Ä–∞–≤–Ω—ã
  if (keys1.length !== keys2.length) {
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
  for (let key of keys1) {
    // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤
    if (!deepEqual(obj1[key], obj2[key])) {
      return false;
    }
  }

  return true;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const objA = { name: 'Alice', details: { age: 25, city: 'NY' } };
const objB = { name: 'Alice', details: { age: 25, city: 'NY' } };
const objC = { name: 'Bob', details: { age: 25, city: 'NY' } };

console.log(deepEqual(objA, objB)); // true
console.log(deepEqual(objA, objC)); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫:
   –ï—Å–ª–∏ –æ–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ —Å—Å—ã–ª–∫—É (`===`), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `true`.
2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤:
   –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –æ–±—ä–µ–∫—Ç–æ–≤ `null` –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º, –æ–Ω–∏ –Ω–µ —Ä–∞–≤–Ω—ã.
3. –ö–ª—é—á–∏ –æ–±—ä–µ–∫—Ç–æ–≤:
   –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤—ã –∫–ª—é—á–µ–π –æ–±—ä–µ–∫—Ç–æ–≤. –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, –æ–±—ä–µ–∫—Ç—ã –Ω–µ —Ä–∞–≤–Ω—ã.
4. –†–µ–∫—É—Ä—Å–∏—è:
   –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: Deep Equal:
---
üéØ –†–µ—à–µ–Ω–∏–µ 2: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤ –∏ –æ–±—ä–µ–∫—Ç–æ–≤
–≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–∞–∫ –º–∞—Å—Å–∏–≤–æ–≤, —Ç–∞–∫ –∏ –æ–±—ä–µ–∫—Ç–æ–≤.
–ö–æ–¥:
```javascript
function deepEqual(obj1, obj2) {
  // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã
  if (obj1 === obj2) return true;

  // –ï—Å–ª–∏ —ç—Ç–æ –º–∞—Å—Å–∏–≤—ã
  if (Array.isArray(obj1) && Array.isArray(obj2)) {
    if (obj1.length !== obj2.length) return false;
    return obj1.every((value, index) => deepEqual(value, obj2[index]));
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ–±—ä–µ–∫—Ç—ã –∏–ª–∏ null
  if (obj1 == null || typeof obj1 !== 'object' || obj2 == null || typeof obj2 !== 'object') {
    return false;
  }

  // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã
  const keys1 = Object.keys(obj1);
  const keys2 = Object.keys(obj2);

  if (keys1.length !== keys2.length) return false;

  return keys1.every(key => deepEqual(obj1[key], obj2[key]));
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const arr1 = [1, { a: 1 }, [2, 3]];
const arr2 = [1, { a: 1 }, [2, 3]];
const arr3 = [1, { a: 2 }, [2, 3]];

console.log(deepEqual(arr1, arr2)); // true
console.log(deepEqual(arr1, arr3)); // false
```
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: Deep Equal:
---
üéØ –†–µ—à–µ–Ω–∏–µ 3: –° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `JSON.stringify`
–ò–Ω–æ–≥–¥–∞, –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç—ã –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ñ—É–Ω–∫—Ü–∏–π –∏–ª–∏ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ JSON –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.
–ö–æ–¥:
```javascript
function deepEqual(obj1, obj2) {
  return JSON.stringify(obj1) === JSON.stringify(obj2);
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const objA = { name: 'Alice', details: { age: 25, city: 'NY' } };
const objB = { name: 'Alice', details: { age: 25, city: 'NY' } };
const objC = { name: 'Alice', details: { age: 25, city: 'LA' } };

console.log(deepEqual(objA, objB)); // true
console.log(deepEqual(objA, objC)); // false
```
–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
- `JSON.stringify` –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.
- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Ä—è–¥–∫—É –∫–ª—é—á–µ–π –≤ –æ–±—ä–µ–∫—Ç–∞—Ö.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: Deep Equal:
---
üéØ –†–µ—à–µ–Ω–∏–µ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫
–ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ (—Å—Å—ã–ª–∞—é—Ç—Å—è —Å–∞–º–∏ –Ω–∞ —Å–µ–±—è), –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏—Ö —Å –ø–æ–º–æ—â—å—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, `WeakMap`.
–ö–æ–¥:
```javascript
function deepEqual(obj1, obj2, visited = new WeakMap()) {
  if (obj1 === obj2) return true;

  if (obj1 == null || typeof obj1 !== 'object' || obj2 == null || typeof obj2 !== 'object') {
    return false;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫
  if (visited.has(obj1)) return visited.get(obj1) === obj2;

  visited.set(obj1, obj2);

  const keys1 = Object.keys(obj1);
  const keys2 = Object.keys(obj2);

  if (keys1.length !== keys2.length) return false;

  for (let key of keys1) {
    if (!deepEqual(obj1[key], obj2[key], visited)) {
      return false;
    }
  }

  return true;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const objA = { name: 'Alice' };
objA.self = objA;

const objB = { name: 'Alice' };
objB.self = objB;

console.log(deepEqual(objA, objB)); // true
```
–†–µ–∑—é–º–µ
| –ú–µ—Ç–æ–¥                      | –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏                                                                                      | –°–ª–æ–∂–Ω–æ—Å—Ç—å       |
|----------------------------|--------------------------------------------------------------------------------------------------|-----------------|
| –†–µ–∫—É—Ä—Å–∏—è               | –†–∞–±–æ—Ç–∞–µ—Ç —Å –æ–±—ä–µ–∫—Ç–∞–º–∏, –º–∞—Å—Å–∏–≤–∞–º–∏, –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏. –ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏.    | O(n)        |
| JSON.stringify         | –ü—Ä–æ—Å—Ç–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –Ω–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫. –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫ –ø–æ—Ä—è–¥–∫—É –∫–ª—é—á–µ–π.         | O(n)        |
| –° –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π (`WeakMap`) | –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏. –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏.                     | O(n)       |
–î–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á, –æ—Å–æ–±–µ–Ω–Ω–æ –±–µ–∑ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞. –î–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ —Å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç —Å `WeakMap`.
---------------------------------------------------------------------------------------------  
