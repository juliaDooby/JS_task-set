---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –û–±—ä–µ–¥–∏–Ω–∏—Ç—å –æ—Ç—Å–æ—Ä—Ç. –º–∞—Å—Å—Å–∏–≤—ã:
---
–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤ –≤ JavaScript –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å –ø–æ–º–æ—â—å—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤. –¢–∞–∫ –∫–∞–∫ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ —É–∂–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã, —Å–∞–º—ã–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ —Å–ª–∏—è–Ω–∏—è –¥–≤—É—Ö –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n) (–≥–¥–µ n ‚Äî —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ–±–æ–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö).
–ê–ª–≥–æ—Ä–∏—Ç–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤:
1. –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –ø–æ –¥–≤—É–º –º–∞—Å—Å–∏–≤–∞–º.
2. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ç–µ–∫—É—â–∏—Ö –ø–æ–∑–∏—Ü–∏–π –≤ –æ–±–æ–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö.
3. –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∏–º–µ–Ω—å—à–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ —Å–¥–≤–∏–≥–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —É–∫–∞–∑–∞—Ç–µ–ª—å.
4. –ï—Å–ª–∏ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function mergeSortedArrays(arr1, arr2) {
  let result = [];
  let i = 0; // –£–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
  let j = 0; // –£–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –º–∞—Å—Å–∏–≤–∞

  // –ü–æ–∫–∞ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –Ω–µ –ø—É—Å—Ç—ã
  while (i < arr1.length && j < arr2.length) {
    if (arr1[i] < arr2[j]) {
      result.push(arr1[i]);
      i++;
    } else {
      result.push(arr2[j]);
      j++;
    }
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
  while (i < arr1.length) {
    result.push(arr1[i]);
    i++;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
  while (j < arr2.length) {
    result.push(arr2[j]);
    j++;
  }

  return result;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const arr1 = [1, 3, 5, 7];
const arr2 = [2, 4, 6, 8];

const mergedArray = mergeSortedArrays(arr1, arr2);
console.log(mergedArray); // [1, 2, 3, 4, 5, 6, 7, 8]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –î–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è:
   - `i` –∏ `j` ‚Äî —ç—Ç–æ —É–∫–∞–∑–∞—Ç–µ–ª–∏ –¥–ª—è –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤ `arr1` –∏ `arr2`.
   - –ú—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –ø–æ–∑–∏—Ü–∏—è—Ö `i` –∏ `j` –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∏–º–µ–Ω—å—à–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤.
2. –¶–∏–∫–ª –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è:
   - –ü–æ–∫–∞ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –Ω–µ –ø—É—Å—Ç—ã, –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∏–º–µ–Ω—å—à–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤ `result` –∏ –¥–≤–∏–≥–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ç–æ—Ç –º–∞—Å—Å–∏–≤, –æ—Ç–∫—É–¥–∞ –±—ã–ª –≤—ã–±—Ä–∞–Ω —ç–ª–µ–º–µ–Ω—Ç.
3. –û—Å—Ç–∞—Ç–æ—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:
   - –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ –µ—â—ë –Ω–µ –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
–ü—Ä–∏–º–µ—Ä —Å –¥—Ä—É–≥–∏–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏:
```javascript
const arr1 = [1, 4, 6, 8];
const arr2 = [2, 3, 5, 7, 9];

const mergedArray = mergeSortedArrays(arr1, arr2);
console.log(mergedArray); // [1, 2, 3, 4, 5, 6, 7, 8, 9]
```
–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ (—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `concat()` –∏ `sort()`)
–ï—Å–ª–∏ –≤–∞–º –Ω–µ –≤–∞–∂–Ω–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–∫–æ–≥–¥–∞ –º–∞—Å—Å–∏–≤—ã –º–∞–ª–µ–Ω—å–∫–∏–µ –∏–ª–∏ –≤–∞–º –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è), –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö:
```javascript
function mergeAndSortArrays(arr1, arr2) {
  return [...arr1, ...arr2].sort((a, b) => a - b);
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const arr1 = [1, 3, 5, 7];
const arr2 = [2, 4, 6, 8];

const mergedArray = mergeAndSortArrays(arr1, arr2);
console.log(mergedArray); // [1, 2, 3, 4, 5, 6, 7, 8]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –æ–±—ä–µ–¥–∏–Ω—è–µ–º –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è (`...`) –∏ –∑–∞—Ç–µ–º —Å–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `.sort()`. –û–¥–Ω–∞–∫–æ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n log n), —á—Ç–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ, —á–µ–º –º–µ—Ç–æ–¥ —Å–ª–∏—è–Ω–∏—è, –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤—ã —É–∂–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã.
–†–µ–∑—é–º–µ:
1. –ï—Å–ª–∏ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã, –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ **—Å–ª–∏—è–Ω–∏—è —Å –¥–≤—É–º—è —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏**, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n).
2. –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤—ã –Ω–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Å `concat()` –∏ `sort()`, –Ω–æ —ç—Ç–æ –º–µ–Ω–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤.

‚õî‚õî‚õî
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –Ω–∞–π—Ç–∏ –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ:
---
–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Vanilla JavaScript, –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç—ã–º, –∏ –∑–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—ë –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ.
–ü—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ ‚Äî —ç—Ç–æ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 1, –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–ª–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ 1 –∏ –Ω–∞ —Å–µ–±—è.
–ê–ª–≥–æ—Ä–∏—Ç–º:
1. –ß–∏—Å–ª–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º, –µ—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ 1 –∏ –Ω–µ –∏–º–µ–µ—Ç –¥–µ–ª–∏—Ç–µ–ª–µ–π, –∫—Ä–æ–º–µ 1 –∏ —Å–∞–º–æ–≥–æ —Å–µ–±—è.
2. –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ª–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ —á–∏—Å–ª–∞–º –æ—Ç 2 –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è –∏–∑ –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–≥–æ —á–∏—Å–ª–∞, —Ç–∞–∫ –∫–∞–∫ –µ—Å–ª–∏ —á–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ –∫–∞–∫–æ–µ-—Ç–æ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ, –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–∏ –±—É–¥—É—Ç –Ω–∞–π–¥–µ–Ω—ã —Ä–∞–Ω—å—à–µ.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function isPrime(num) {
  if (num <= 1) return false; // –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 1
  for (let i = 2; i <= Math.sqrt(num); i++) {
    if (num % i === 0) {
      return false; // –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –¥–µ–ª–∏—Ç–µ–ª—å, —á–∏—Å–ª–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ
    }
  }
  return true; // –ï—Å–ª–∏ –¥–µ–ª–∏—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç–æ–µ
}

function findPrimes(arr) {
  return arr.filter(isPrime); // –§–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Å—Å–∏–≤, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞
}
// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15];
const primes = findPrimes(numbers);

console.log(primes); // [2, 3, 5, 7, 11, 13]
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. `isPrime(num)` ‚Äî —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Å—Ç–æ—Ç—ã —á–∏—Å–ª–∞. –ú—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–ª–∏—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –Ω–∞ –¥—Ä—É–≥–∏–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è –∏–∑ —á–∏—Å–ª–∞. –ï—Å–ª–∏ –¥–µ–ª–∏—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, —Ç–æ —á–∏—Å–ª–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ.
2. `findPrimes(arr)` ‚Äî —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –º–∞—Å—Å–∏–≤–∞ `.filter()`, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö `isPrime()` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç `true`.
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:
- –í–º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ª–∏–º–æ—Å—Ç–∏ –Ω–∞ –≤—Å–µ —á–∏—Å–ª–∞ –¥–æ —Å–∞–º–æ–≥–æ —á–∏—Å–ª–∞, –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –¥–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π, –æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª.
–ü—Ä–∏–º–µ—Ä —Å –≤—ã–≤–æ–¥–æ–º:
```javascript
const numbers = [1, 2, 3, 4, 5, 16, 17, 18, 19, 20, 23, 24];
const primes = findPrimes(numbers);
console.log(primes);  // [2, 3, 5, 17, 19, 23]
```
---------------------------------------------------------------------------------------------  
