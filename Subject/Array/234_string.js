---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ö–∞–∫–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ:
---
–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä–∞—è –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ –≤ –º–∞—Å—Å–∏–≤–µ —Å—Ç—Ä–æ–∫, –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏. –ó–∞—Ç–µ–º –º—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –ü—Ä–æ–π–¥–µ–º –ø–æ –≤—Å–µ–º —Å—Ç—Ä–æ–∫–∞–º –≤ –º–∞—Å—Å–∏–≤–µ –∏ –±—É–¥–µ–º –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
2. –ù–∞–π–¥–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
üéØ –†–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π:
```javascript
function mostFrequentString(arr) {
  const countMap = {};

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
  arr.forEach(str => {
    countMap[str] = (countMap[str] || 0) + 1;
  });

  // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
  let maxCount = 0;
  let mostFrequent = '';

  for (let str in countMap) {
    if (countMap[str] > maxCount) {
      maxCount = countMap[str];
      mostFrequent = str;
    }
  }

  return mostFrequent;
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
const strings = ["apple", "banana", "apple", "orange", "banana", "apple"];
const frequentString = mostFrequentString(strings);

console.log(frequentString); // "apple"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
1. –ú—ã —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç `countMap`, –≥–¥–µ –∫–ª—é—á–∏ ‚Äî —ç—Ç–æ —Å—Ç—Ä–æ–∫–∏, –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ö –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
2. –ú—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –º–∞—Å—Å–∏–≤—É –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç–µ.
3. –ó–∞—Ç–µ–º –º—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –æ–±—ä–µ–∫—Ç—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫—É —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
4. –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä–∞—è –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ.
–ü—Ä–∏–º–µ—Ä 1:
```javascript
const strings = ["apple", "banana", "apple", "orange", "banana", "apple"];
const frequentString = mostFrequentString(strings);
console.log(frequentString); // "apple"
```
–ü—Ä–∏–º–µ—Ä 2:
```javascript
const strings = ["dog", "cat", "dog", "dog", "fish", "fish"];
const frequentString = mostFrequentString(strings);
console.log(frequentString); // "dog"
```
–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:
- –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n), –≥–¥–µ n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–∞–∫ –∫–∞–∫ –º—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –º–∞—Å—Å–∏–≤—É –æ–¥–∏–Ω —Ä–∞–∑ –∏ –∑–∞—Ç–µ–º –ø–æ –æ–±—ä–µ–∫—Ç—É.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ö–∞–∫–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ:
---
üéØ –†–µ—à–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `Map`
–í–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `Map`, –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª—é—á–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.
```javascript
function mostFrequentString(arr) {
  const countMap = new Map();

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
  arr.forEach(str => {
    countMap.set(str, (countMap.get(str) || 0) + 1);
  });

  // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
  let maxCount = 0;
  let mostFrequent = '';

  for (let [str, count] of countMap) {
    if (count > maxCount) {
      maxCount = count;
      mostFrequent = str;
    }
  }

  return mostFrequent;
}

const strings = ["dog", "cat", "dog", "dog", "fish", "fish"];
const frequentString = mostFrequentString(strings);
console.log(frequentString); // "dog"
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `Map` –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π —Å—Ç—Ä–æ–∫. `get()` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∞ `set()` ‚Äî –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
- –í –æ—Å—Ç–∞–ª—å–Ω–æ–º –ª–æ–≥–∏–∫–∞ –æ—Å—Ç–∞—ë—Ç—Å—è —Ç–∞–∫–æ–π –∂–µ.
–†–µ–∑—é–º–µ:
- –î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–ª–∏ `Map` –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
- –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(n), –≥–¥–µ n ‚Äî —ç—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –º–∞—Å—Å–∏–≤–µ.
- –í—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∏—Å–ª–∞–º–∏ –∏–ª–∏ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.
---------------------------------------------------------------------------------------------  
‚õî‚õî‚õî
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ü–æ–≤–µ—Ä–Ω—É—Ç–∞ –ª–∏ —Å—Ç—Ä–æ–∫–∞:
---
–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ–≤—ë—Ä–Ω—É—Ç–æ–π (–ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º), —Ç–æ –µ—Å—Ç—å –æ–Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤–æ —á–∏—Ç–∞–µ—Ç—Å—è —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤.
–ê–ª–≥–æ—Ä–∏—Ç–º:
1. –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –µ—ë –æ–±—Ä–∞—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.
2. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ–π.
3. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –∑–Ω–∞—á–∏—Ç, —ç—Ç–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º, –∏–Ω–∞—á–µ ‚Äî –Ω–µ—Ç.
üéØ –†–µ—à–µ–Ω–∏–µ:
1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `reverse()`
```javascript
function isPalindrome(str) {
  const reversed = str.split('').reverse().join('');
  return str === reversed;
}

console.log(isPalindrome("madam")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã —Ä–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é `split('')`.
- –ó–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ–º `reverse()` –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞.
- –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–µ–¥–∏–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—å—é `join('')`.
- –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ–π.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ü–æ–≤–µ—Ä–Ω—É—Ç–∞ –ª–∏ —Å—Ç—Ä–æ–∫–∞:
---
2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ü–∏–∫–ª–æ–≤
–ú—ã –º–æ–∂–µ–º –≤—Ä—É—á–Ω—É—é –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ —Å—Ç—Ä–æ–∫–µ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –µ—ë —Å–∏–º–≤–æ–ª—ã —Å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ü–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function isPalindrome(str) {
  const len = str.length;
  for (let i = 0; i < len / 2; i++) {
    if (str[i] !== str[len - 1 - i]) {
      return false;
    }
  }
  return true;
}

console.log(isPalindrome("madam")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Å—Ç—Ä–æ–∫–µ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–∏–º–≤–æ–ª—ã —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞.
- –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `false`. –ï—Å–ª–∏ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `true`.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ü–æ–≤–µ—Ä–Ω—É—Ç–∞ –ª–∏ —Å—Ç—Ä–æ–∫–∞:
---
3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ `every()`
–ú–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ `every()` –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–∞—Ä —Å–∏–º–≤–æ–ª–æ–≤.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function isPalindrome(str) {
  return [...str].every((char, index) => char === str[str.length - 1 - index]);
}

console.log(isPalindrome("madam")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è (`...`), —á—Ç–æ–±—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤.
- –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `every()` –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ —Å –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏ –µ–≥–æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π —Å–∏–º–≤–æ–ª (—Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏) —Ä–∞–≤–µ–Ω –µ–º—É.
---------------------------------------------------------------------------------------------  
---------------------------------------------------------------------------------------------  
‚ãô ‚ùç ‚åõ –ó–∞–¥–∞—á–∞: –ü–æ–≤–µ—Ä–Ω—É—Ç–∞ –ª–∏ —Å—Ç—Ä–æ–∫–∞:
---
4. –£—á–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞ –∏ –ø—Ä–æ–±–µ–ª–æ–≤
–ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –∏ —Ä–µ–≥–∏—Å—Ç—Ä —Å–∏–º–≤–æ–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Å—Ç—Ä–æ–∫–∞—Ö "A man a plan a canal Panama"), –º–æ–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–±–µ–ª—ã.
üéØ –†–µ—à–µ–Ω–∏–µ:
```javascript
function isPalindrome(str) {
  const cleanedStr = str.replace(/\s+/g, '').toLowerCase();
  return cleanedStr === cleanedStr.split('').reverse().join('');
}

console.log(isPalindrome("A man a plan a canal Panama")); // true
console.log(isPalindrome("hello")); // false
```
–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
- –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ `\s+`, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã.
- –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä —Å –ø–æ–º–æ—â—å—é `toLowerCase()`.
- –î–∞–ª–µ–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º.
–†–µ–∑—é–º–µ:
1. –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º:
   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ `reverse()`.
   - –†—É—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤ —Å –¥–≤—É—Ö –∫–æ–Ω—Ü–æ–≤ —Å—Ç—Ä–æ–∫–∏.
   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ `every()`.
2. –î–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤–∫–ª—é—á–∞—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞, –º–æ–∂–Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç—Ä–æ–∫—É.
--------------------------------------------------------------------------------------------- 
